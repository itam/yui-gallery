if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/gallery-sm-map/gallery-sm-map.js']) {
   __coverage__['build/gallery-sm-map/gallery-sm-map.js'] = {"path":"build/gallery-sm-map/gallery-sm-map.js","s":{"1":0,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":26},"end":{"line":1,"column":45}}},"2":{"name":"YMap","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":23}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":13},"end":{"line":35,"column":25}}},"4":{"name":"(anonymous_4)","line":60,"loc":{"start":{"line":60,"column":11},"end":{"line":60,"column":23}}},"5":{"name":"(anonymous_5)","line":84,"loc":{"start":{"line":84,"column":10},"end":{"line":84,"column":39}}},"6":{"name":"(anonymous_6)","line":107,"loc":{"start":{"line":107,"column":13},"end":{"line":107,"column":25}}},"7":{"name":"(anonymous_7)","line":127,"loc":{"start":{"line":127,"column":9},"end":{"line":127,"column":38}}},"8":{"name":"(anonymous_8)","line":139,"loc":{"start":{"line":139,"column":9},"end":{"line":139,"column":24}}},"9":{"name":"(anonymous_9)","line":149,"loc":{"start":{"line":149,"column":10},"end":{"line":149,"column":22}}},"10":{"name":"(anonymous_10)","line":161,"loc":{"start":{"line":161,"column":12},"end":{"line":161,"column":27}}},"11":{"name":"(anonymous_11)","line":195,"loc":{"start":{"line":195,"column":9},"end":{"line":195,"column":31}}},"12":{"name":"(anonymous_12)","line":222,"loc":{"start":{"line":222,"column":12},"end":{"line":222,"column":24}}},"13":{"name":"(anonymous_13)","line":241,"loc":{"start":{"line":241,"column":17},"end":{"line":241,"column":32}}},"14":{"name":"(anonymous_14)","line":282,"loc":{"start":{"line":282,"column":43},"end":{"line":282,"column":59}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":323,"column":34}},"2":{"start":{"line":7,"column":0},"end":{"line":9,"column":74}},"3":{"start":{"line":11,"column":0},"end":{"line":26,"column":1}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":17}},"5":{"start":{"line":14,"column":4},"end":{"line":25,"column":5}},"6":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"7":{"start":{"line":16,"column":12},"end":{"line":16,"column":58}},"8":{"start":{"line":19,"column":8},"end":{"line":19,"column":18}},"9":{"start":{"line":21,"column":8},"end":{"line":24,"column":9}},"10":{"start":{"line":22,"column":12},"end":{"line":22,"column":31}},"11":{"start":{"line":23,"column":12},"end":{"line":23,"column":41}},"12":{"start":{"line":31,"column":0},"end":{"line":39,"column":1}},"13":{"start":{"line":32,"column":4},"end":{"line":38,"column":7}},"14":{"start":{"line":36,"column":12},"end":{"line":36,"column":40}},"15":{"start":{"line":41,"column":0},"end":{"line":291,"column":9}},"16":{"start":{"line":61,"column":8},"end":{"line":61,"column":76}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":33}},"18":{"start":{"line":63,"column":8},"end":{"line":63,"column":33}},"19":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"20":{"start":{"line":66,"column":12},"end":{"line":66,"column":26}},"21":{"start":{"line":69,"column":8},"end":{"line":69,"column":20}},"22":{"start":{"line":85,"column":8},"end":{"line":86,"column":18}},"23":{"start":{"line":88,"column":8},"end":{"line":94,"column":9}},"24":{"start":{"line":89,"column":12},"end":{"line":89,"column":31}},"25":{"start":{"line":91,"column":12},"end":{"line":93,"column":13}},"26":{"start":{"line":92,"column":16},"end":{"line":92,"column":65}},"27":{"start":{"line":96,"column":8},"end":{"line":96,"column":20}},"28":{"start":{"line":108,"column":8},"end":{"line":108,"column":25}},"29":{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},"30":{"start":{"line":111,"column":12},"end":{"line":111,"column":65}},"31":{"start":{"line":114,"column":8},"end":{"line":114,"column":23}},"32":{"start":{"line":128,"column":8},"end":{"line":128,"column":38}},"33":{"start":{"line":129,"column":8},"end":{"line":129,"column":57}},"34":{"start":{"line":140,"column":8},"end":{"line":140,"column":42}},"35":{"start":{"line":150,"column":8},"end":{"line":150,"column":57}},"36":{"start":{"line":162,"column":8},"end":{"line":162,"column":38}},"37":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"38":{"start":{"line":165,"column":12},"end":{"line":165,"column":25}},"39":{"start":{"line":168,"column":8},"end":{"line":168,"column":35}},"40":{"start":{"line":169,"column":8},"end":{"line":169,"column":37}},"41":{"start":{"line":171,"column":8},"end":{"line":173,"column":9}},"42":{"start":{"line":172,"column":12},"end":{"line":172,"column":44}},"43":{"start":{"line":175,"column":8},"end":{"line":177,"column":9}},"44":{"start":{"line":176,"column":12},"end":{"line":176,"column":45}},"45":{"start":{"line":179,"column":8},"end":{"line":179,"column":20}},"46":{"start":{"line":196,"column":8},"end":{"line":196,"column":38}},"47":{"start":{"line":198,"column":8},"end":{"line":200,"column":9}},"48":{"start":{"line":199,"column":12},"end":{"line":199,"column":37}},"49":{"start":{"line":202,"column":8},"end":{"line":202,"column":33}},"50":{"start":{"line":203,"column":8},"end":{"line":203,"column":35}},"51":{"start":{"line":205,"column":8},"end":{"line":207,"column":9}},"52":{"start":{"line":206,"column":12},"end":{"line":206,"column":41}},"53":{"start":{"line":209,"column":8},"end":{"line":211,"column":9}},"54":{"start":{"line":210,"column":12},"end":{"line":210,"column":45}},"55":{"start":{"line":213,"column":8},"end":{"line":213,"column":20}},"56":{"start":{"line":223,"column":8},"end":{"line":223,"column":59}},"57":{"start":{"line":242,"column":8},"end":{"line":242,"column":14}},"58":{"start":{"line":245,"column":8},"end":{"line":248,"column":9}},"59":{"start":{"line":246,"column":12},"end":{"line":246,"column":41}},"60":{"start":{"line":247,"column":12},"end":{"line":247,"column":35}},"61":{"start":{"line":251,"column":8},"end":{"line":253,"column":16}},"62":{"start":{"line":255,"column":8},"end":{"line":259,"column":9}},"63":{"start":{"line":256,"column":12},"end":{"line":258,"column":13}},"64":{"start":{"line":257,"column":16},"end":{"line":257,"column":25}},"65":{"start":{"line":261,"column":8},"end":{"line":261,"column":18}},"66":{"start":{"line":283,"column":8},"end":{"line":286,"column":9}},"67":{"start":{"line":285,"column":12},"end":{"line":285,"column":46}},"68":{"start":{"line":289,"column":8},"end":{"line":289,"column":34}},"69":{"start":{"line":299,"column":0},"end":{"line":299,"column":49}},"70":{"start":{"line":307,"column":0},"end":{"line":307,"column":45}},"71":{"start":{"line":318,"column":0},"end":{"line":318,"column":47}},"72":{"start":{"line":320,"column":0},"end":{"line":320,"column":13}}},"branchMap":{"1":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":25},"end":{"line":9,"column":56}},{"start":{"line":9,"column":60},"end":{"line":9,"column":73}}]},"2":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]},"3":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":8}},{"start":{"line":15,"column":8},"end":{"line":15,"column":8}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":0},"end":{"line":31,"column":0}},{"start":{"line":31,"column":0},"end":{"line":31,"column":0}}]},"5":{"line":61,"type":"cond-expr","locations":[{"start":{"line":61,"column":51},"end":{"line":61,"column":70}},{"start":{"line":61,"column":73},"end":{"line":61,"column":75}}]},"6":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]},"7":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":12},"end":{"line":91,"column":12}},{"start":{"line":91,"column":12},"end":{"line":91,"column":12}}]},"8":{"line":129,"type":"cond-expr","locations":[{"start":{"line":129,"column":23},"end":{"line":129,"column":35}},{"start":{"line":129,"column":38},"end":{"line":129,"column":56}}]},"9":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":8},"end":{"line":164,"column":8}},{"start":{"line":164,"column":8},"end":{"line":164,"column":8}}]},"10":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":8},"end":{"line":171,"column":8}},{"start":{"line":171,"column":8},"end":{"line":171,"column":8}}]},"11":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":8},"end":{"line":175,"column":8}},{"start":{"line":175,"column":8},"end":{"line":175,"column":8}}]},"12":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":8},"end":{"line":198,"column":8}},{"start":{"line":198,"column":8},"end":{"line":198,"column":8}}]},"13":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":8},"end":{"line":205,"column":8}},{"start":{"line":205,"column":8},"end":{"line":205,"column":8}}]},"14":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":8},"end":{"line":209,"column":8}},{"start":{"line":209,"column":8},"end":{"line":209,"column":8}}]},"15":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":8},"end":{"line":245,"column":8}},{"start":{"line":245,"column":8},"end":{"line":245,"column":8}}]},"16":{"line":247,"type":"cond-expr","locations":[{"start":{"line":247,"column":28},"end":{"line":247,"column":29}},{"start":{"line":247,"column":32},"end":{"line":247,"column":34}}]},"17":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":12},"end":{"line":256,"column":12}},{"start":{"line":256,"column":12},"end":{"line":256,"column":12}}]},"18":{"line":282,"type":"cond-expr","locations":[{"start":{"line":282,"column":31},"end":{"line":282,"column":40}},{"start":{"line":282,"column":43},"end":{"line":290,"column":5}}]},"19":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":8},"end":{"line":283,"column":8}},{"start":{"line":283,"column":8},"end":{"line":283,"column":8}}]},"20":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":19},"end":{"line":285,"column":26}},{"start":{"line":285,"column":30},"end":{"line":285,"column":45}}]},"21":{"line":289,"type":"binary-expr","locations":[{"start":{"line":289,"column":15},"end":{"line":289,"column":22}},{"start":{"line":289,"column":26},"end":{"line":289,"column":33}}]}},"code":["(function () { YUI.add('gallery-sm-map', function (Y, NAME) {","","/*jshint es3: true, globalstrict: true, indent: 4 */","","\"use strict\";","","var isNative           = Y.Lang._isNative,","    nativeObjectCreate = isNative(Object.create),","    sizeIsGetter       = isNative(Object.defineProperty) && Y.UA.ie !== 8;","","function YMap(entries) {","    this.clear();","","    if (entries) {","        if (!Y.Lang.isArray(entries)) {","            entries = Array.prototype.slice.call(entries);","        }","","        var entry;","","        for (var i = 0, len = entries.length; i < len; ++i) {","            entry = entries[i];","            this.set(entry[0], entry[1]);","        }","    }","}","","// In modern browsers, the `size` property is a non-enumerable getter on the","// prototype, as specified in ES6. In older browsers (mainly IE<9), we just","// manually update a plain old instance property.","if (sizeIsGetter) {","    Object.defineProperty(YMap.prototype, 'size', {","        configurable: true,","","        get: function () {","            return this._mapKeys.length;","        }","    });","}","","Y.mix(YMap.prototype, {","    // -- Public Properties ----------------------------------------------------","","    /**","    The number of entries in this map.","","    @property {Number} size","    @default 0","    @readOnly","    **/","","    // -- Public Methods -------------------------------------------------------","","    /**","    Deletes all entries from this map.","","    @method clear","    @chainable","    **/","    clear: function () {","        this._mapKeyIndices = nativeObjectCreate ? Object.create(null) : {};","        this._mapKeys       = [];","        this._mapValues     = [];","","        if (!sizeIsGetter) {","            this.size = 0;","        }","","        return this;","    },","","    /**","    Executes the given _callback_ function on each entry in this map.","","    @method each","    @param {Function} callback Callback function.","        @param {Mixed} callback.value Value being iterated.","        @param {Mixed} callback.key Key being iterated.","        @param {Map} callback.map Reference to this map.","    @param {Object} [thisObj] `this` object to use when calling _callback_.","    @chainable","    @see forEach","    **/","    each: function (callback, thisObj) {","        var entries = this.entries(),","            entry;","","        for (var i = 0, len = entries.length; i < len; ++i) {","            entry = entries[i];","","            if (0 in entry) {","                callback.call(thisObj, entry[1], entry[0], this);","            }","        }","","        return this;","    },","","    /**","    Returns an array of all the entries in this map. Each entry is an array with","    two items, the first being a key and the second a value associated with that","    key.","","    @method entries","    @return {Array} Array of entries.","    **/","    entries: function () {","        var entries = [];","","        for (var i = 0, len = this._mapKeys.length; i < len; ++i) {","            entries.push([this._mapKeys[i], this._mapValues[i]]);","        }","","        return entries;","    },","","    /**","    Returns the value associated with the given _key_, or _default_ if the key","    isn't found.","","    @method get","    @param {Mixed} key Key to look up.","    @param {Mixed} [defaultValue] Default value to return if _key_ isn't found.","    @return {Mixed} Value associated with the given _key_, or _default_ if the","        key isn't found.","    **/","    get: function (key, defaultValue) {","        var i = this._indexOfKey(key);","        return i < 0 ? defaultValue : this._mapValues[i];","    },","","    /**","    Returns `true` if _key_ exists in this map, `false` otherwise.","","    @method has","    @param {Mixed} key Key to look up.","    @return {Boolean} `true` if _key_ exists in this map, `false` otherwise.","    **/","    has: function (key) {","        return this._indexOfKey(key) >= 0;","    },","","    /**","    Returns an array of all the keys in this map.","","    @method keys","    @return {Array} Array of keys.","    **/","    keys: function () {","        return Array.prototype.slice.call(this._mapKeys);","    },","","    /**","    Deletes the entry with the given _key_.","","    @method remove","    @param {Mixed} key Key to delete.","    @return {Boolean} `true` if the key existed and was deleted, `false`","        otherwise.","    **/","    remove: function (key) {","        var i = this._indexOfKey(key);","","        if (i < 0) {","            return false;","        }","","        this._mapKeys.splice(i, 1);","        this._mapValues.splice(i, 1);","","        if (typeof key === 'string') {","            delete this._mapKeyIndices[key];","        }","","        if (!sizeIsGetter) {","            this.size = this._mapKeys.length;","        }","","        return true;","    },","","    /**","    Sets the value of the entry with the given _key_. If the key already exists,","    its value will be overwritten; otherwise it will be created.","","    The _key_ may be any JavaScript value (including both primitives and","    objects), but string keys will allow fast lookups, whereas non-string keys","    will result in slower lookups.","","    @method set","    @param {Mixed} key Key to set.","    @param {Mixed} value Value to set.","    @chainable","    **/","    set: function (key, value) {","        var i = this._indexOfKey(key);","","        if (i < 0) {","            i = this._mapKeys.length;","        }","","        this._mapKeys[i]   = key;","        this._mapValues[i] = value;","","        if (typeof key === 'string') {","            this._mapKeyIndices[key] = i;","        }","","        if (!sizeIsGetter) {","            this.size = this._mapKeys.length;","        }","","        return this;","    },","","    /**","    Returns an array of all the values in this map.","","    @method values","    @return {Array} Array of values.","    **/","    values: function () {","        return Array.prototype.slice.call(this._mapValues);","    },","","    // -- Protected Methods ----------------------------------------------------","","    /**","    Returns the numerical index of the entry with the given _key_, or `-1` if","    not found.","","    This is a very efficient operation with string keys, but is slower with","    non-string keys.","","    @method _indexOfKey","    @param {Mixed} key Key to look up.","    @return {Number} Index of the entry with the given _key_, or `-1` if not","        found.","    @protected","    **/","    _indexOfKey: function (key) {","        var i;","","        // If the key is a string, do a fast hash lookup for the index.","        if (typeof key === 'string') {","            i = this._mapKeyIndices[key];","            return i >= 0 ? i : -1;","        }","","        // Otherwise, do a slow O(n) lookup.","        var keys = this._mapKeys,","            is   = this._is,","            len;","","        for (i = 0, len = keys.length; i < len; ++i) {","            if (is(keys[i], key)) {","                return i;","            }","        }","","        return -1;","    },","","    /**","    Returns `true` if the two given values are the same value, `false`","    otherwise.","","    This is an implementation of the ES5/6 SameValue comparison algorithm, which","    is more correct than `===` in that it considers `NaN` to be the same as","    `NaN`, and does not consider `0` to be the same as `-0`.","","    This method is an alias for `Object.is()` if available, or a fallback","    implementation if not.","","    @method _is","    @param {Mixed} a First value to compare.","    @param {Mixed} b Second value to compare.","    @return {Boolean} `true` if _a_ and _b_ are the same value, `false`","        otherwise.","    @protected","    **/","    _is: isNative(Object.is) ? Object.is : function (a, b) {","        if (a === b) {","            // 0 === -0, but they're not identical.","            return a !== 0 || 1 / a === 1 / b;","        }","","        // NaN !== NaN, but they're identical.","        return a !== a && b !== b;","    }","}, true);","","/**","Alias for `remove()`.","","@method delete","@see remove","**/","YMap.prototype['delete'] = YMap.prototype.remove;","","/**","Alias for `each()`.","","@method forEach","@see each","**/","YMap.prototype.forEach = YMap.prototype.each;","","/**","Returns a JSON-serializable representation of this map.","","This is effectively an alias for `entries()`, but could be overridden to","return a customized representation.","","@method toJSON","@return {Array} JSON-serializable array of entries in this map.","**/","YMap.prototype.toJSON = YMap.prototype.entries;","","Y.Map = YMap;","","","}, '@VERSION@', {\"requires\": []});","","}());"]};
}
var __cov_PGUYM_ikLzavDhzifxNvkw = __coverage__['build/gallery-sm-map/gallery-sm-map.js'];
__cov_PGUYM_ikLzavDhzifxNvkw.s['1']++;YUI.add('gallery-sm-map',function(Y,NAME){'use strict';__cov_PGUYM_ikLzavDhzifxNvkw.f['1']++;__cov_PGUYM_ikLzavDhzifxNvkw.s['2']++;var isNative=Y.Lang._isNative,nativeObjectCreate=isNative(Object.create),sizeIsGetter=(__cov_PGUYM_ikLzavDhzifxNvkw.b['1'][0]++,isNative(Object.defineProperty))&&(__cov_PGUYM_ikLzavDhzifxNvkw.b['1'][1]++,Y.UA.ie!==8);function YMap(entries){__cov_PGUYM_ikLzavDhzifxNvkw.f['2']++;__cov_PGUYM_ikLzavDhzifxNvkw.s['4']++;this.clear();__cov_PGUYM_ikLzavDhzifxNvkw.s['5']++;if(entries){__cov_PGUYM_ikLzavDhzifxNvkw.b['2'][0]++;__cov_PGUYM_ikLzavDhzifxNvkw.s['6']++;if(!Y.Lang.isArray(entries)){__cov_PGUYM_ikLzavDhzifxNvkw.b['3'][0]++;__cov_PGUYM_ikLzavDhzifxNvkw.s['7']++;entries=Array.prototype.slice.call(entries);}else{__cov_PGUYM_ikLzavDhzifxNvkw.b['3'][1]++;}__cov_PGUYM_ikLzavDhzifxNvkw.s['8']++;var entry;__cov_PGUYM_ikLzavDhzifxNvkw.s['9']++;for(var i=0,len=entries.length;i<len;++i){__cov_PGUYM_ikLzavDhzifxNvkw.s['10']++;entry=entries[i];__cov_PGUYM_ikLzavDhzifxNvkw.s['11']++;this.set(entry[0],entry[1]);}}else{__cov_PGUYM_ikLzavDhzifxNvkw.b['2'][1]++;}}__cov_PGUYM_ikLzavDhzifxNvkw.s['12']++;if(sizeIsGetter){__cov_PGUYM_ikLzavDhzifxNvkw.b['4'][0]++;__cov_PGUYM_ikLzavDhzifxNvkw.s['13']++;Object.defineProperty(YMap.prototype,'size',{configurable:true,get:function(){__cov_PGUYM_ikLzavDhzifxNvkw.f['3']++;__cov_PGUYM_ikLzavDhzifxNvkw.s['14']++;return this._mapKeys.length;}});}else{__cov_PGUYM_ikLzavDhzifxNvkw.b['4'][1]++;}__cov_PGUYM_ikLzavDhzifxNvkw.s['15']++;Y.mix(YMap.prototype,{clear:function(){__cov_PGUYM_ikLzavDhzifxNvkw.f['4']++;__cov_PGUYM_ikLzavDhzifxNvkw.s['16']++;this._mapKeyIndices=nativeObjectCreate?(__cov_PGUYM_ikLzavDhzifxNvkw.b['5'][0]++,Object.create(null)):(__cov_PGUYM_ikLzavDhzifxNvkw.b['5'][1]++,{});__cov_PGUYM_ikLzavDhzifxNvkw.s['17']++;this._mapKeys=[];__cov_PGUYM_ikLzavDhzifxNvkw.s['18']++;this._mapValues=[];__cov_PGUYM_ikLzavDhzifxNvkw.s['19']++;if(!sizeIsGetter){__cov_PGUYM_ikLzavDhzifxNvkw.b['6'][0]++;__cov_PGUYM_ikLzavDhzifxNvkw.s['20']++;this.size=0;}else{__cov_PGUYM_ikLzavDhzifxNvkw.b['6'][1]++;}__cov_PGUYM_ikLzavDhzifxNvkw.s['21']++;return this;},each:function(callback,thisObj){__cov_PGUYM_ikLzavDhzifxNvkw.f['5']++;__cov_PGUYM_ikLzavDhzifxNvkw.s['22']++;var entries=this.entries(),entry;__cov_PGUYM_ikLzavDhzifxNvkw.s['23']++;for(var i=0,len=entries.length;i<len;++i){__cov_PGUYM_ikLzavDhzifxNvkw.s['24']++;entry=entries[i];__cov_PGUYM_ikLzavDhzifxNvkw.s['25']++;if(0 in entry){__cov_PGUYM_ikLzavDhzifxNvkw.b['7'][0]++;__cov_PGUYM_ikLzavDhzifxNvkw.s['26']++;callback.call(thisObj,entry[1],entry[0],this);}else{__cov_PGUYM_ikLzavDhzifxNvkw.b['7'][1]++;}}__cov_PGUYM_ikLzavDhzifxNvkw.s['27']++;return this;},entries:function(){__cov_PGUYM_ikLzavDhzifxNvkw.f['6']++;__cov_PGUYM_ikLzavDhzifxNvkw.s['28']++;var entries=[];__cov_PGUYM_ikLzavDhzifxNvkw.s['29']++;for(var i=0,len=this._mapKeys.length;i<len;++i){__cov_PGUYM_ikLzavDhzifxNvkw.s['30']++;entries.push([this._mapKeys[i],this._mapValues[i]]);}__cov_PGUYM_ikLzavDhzifxNvkw.s['31']++;return entries;},get:function(key,defaultValue){__cov_PGUYM_ikLzavDhzifxNvkw.f['7']++;__cov_PGUYM_ikLzavDhzifxNvkw.s['32']++;var i=this._indexOfKey(key);__cov_PGUYM_ikLzavDhzifxNvkw.s['33']++;return i<0?(__cov_PGUYM_ikLzavDhzifxNvkw.b['8'][0]++,defaultValue):(__cov_PGUYM_ikLzavDhzifxNvkw.b['8'][1]++,this._mapValues[i]);},has:function(key){__cov_PGUYM_ikLzavDhzifxNvkw.f['8']++;__cov_PGUYM_ikLzavDhzifxNvkw.s['34']++;return this._indexOfKey(key)>=0;},keys:function(){__cov_PGUYM_ikLzavDhzifxNvkw.f['9']++;__cov_PGUYM_ikLzavDhzifxNvkw.s['35']++;return Array.prototype.slice.call(this._mapKeys);},remove:function(key){__cov_PGUYM_ikLzavDhzifxNvkw.f['10']++;__cov_PGUYM_ikLzavDhzifxNvkw.s['36']++;var i=this._indexOfKey(key);__cov_PGUYM_ikLzavDhzifxNvkw.s['37']++;if(i<0){__cov_PGUYM_ikLzavDhzifxNvkw.b['9'][0]++;__cov_PGUYM_ikLzavDhzifxNvkw.s['38']++;return false;}else{__cov_PGUYM_ikLzavDhzifxNvkw.b['9'][1]++;}__cov_PGUYM_ikLzavDhzifxNvkw.s['39']++;this._mapKeys.splice(i,1);__cov_PGUYM_ikLzavDhzifxNvkw.s['40']++;this._mapValues.splice(i,1);__cov_PGUYM_ikLzavDhzifxNvkw.s['41']++;if(typeof key==='string'){__cov_PGUYM_ikLzavDhzifxNvkw.b['10'][0]++;__cov_PGUYM_ikLzavDhzifxNvkw.s['42']++;delete this._mapKeyIndices[key];}else{__cov_PGUYM_ikLzavDhzifxNvkw.b['10'][1]++;}__cov_PGUYM_ikLzavDhzifxNvkw.s['43']++;if(!sizeIsGetter){__cov_PGUYM_ikLzavDhzifxNvkw.b['11'][0]++;__cov_PGUYM_ikLzavDhzifxNvkw.s['44']++;this.size=this._mapKeys.length;}else{__cov_PGUYM_ikLzavDhzifxNvkw.b['11'][1]++;}__cov_PGUYM_ikLzavDhzifxNvkw.s['45']++;return true;},set:function(key,value){__cov_PGUYM_ikLzavDhzifxNvkw.f['11']++;__cov_PGUYM_ikLzavDhzifxNvkw.s['46']++;var i=this._indexOfKey(key);__cov_PGUYM_ikLzavDhzifxNvkw.s['47']++;if(i<0){__cov_PGUYM_ikLzavDhzifxNvkw.b['12'][0]++;__cov_PGUYM_ikLzavDhzifxNvkw.s['48']++;i=this._mapKeys.length;}else{__cov_PGUYM_ikLzavDhzifxNvkw.b['12'][1]++;}__cov_PGUYM_ikLzavDhzifxNvkw.s['49']++;this._mapKeys[i]=key;__cov_PGUYM_ikLzavDhzifxNvkw.s['50']++;this._mapValues[i]=value;__cov_PGUYM_ikLzavDhzifxNvkw.s['51']++;if(typeof key==='string'){__cov_PGUYM_ikLzavDhzifxNvkw.b['13'][0]++;__cov_PGUYM_ikLzavDhzifxNvkw.s['52']++;this._mapKeyIndices[key]=i;}else{__cov_PGUYM_ikLzavDhzifxNvkw.b['13'][1]++;}__cov_PGUYM_ikLzavDhzifxNvkw.s['53']++;if(!sizeIsGetter){__cov_PGUYM_ikLzavDhzifxNvkw.b['14'][0]++;__cov_PGUYM_ikLzavDhzifxNvkw.s['54']++;this.size=this._mapKeys.length;}else{__cov_PGUYM_ikLzavDhzifxNvkw.b['14'][1]++;}__cov_PGUYM_ikLzavDhzifxNvkw.s['55']++;return this;},values:function(){__cov_PGUYM_ikLzavDhzifxNvkw.f['12']++;__cov_PGUYM_ikLzavDhzifxNvkw.s['56']++;return Array.prototype.slice.call(this._mapValues);},_indexOfKey:function(key){__cov_PGUYM_ikLzavDhzifxNvkw.f['13']++;__cov_PGUYM_ikLzavDhzifxNvkw.s['57']++;var i;__cov_PGUYM_ikLzavDhzifxNvkw.s['58']++;if(typeof key==='string'){__cov_PGUYM_ikLzavDhzifxNvkw.b['15'][0]++;__cov_PGUYM_ikLzavDhzifxNvkw.s['59']++;i=this._mapKeyIndices[key];__cov_PGUYM_ikLzavDhzifxNvkw.s['60']++;return i>=0?(__cov_PGUYM_ikLzavDhzifxNvkw.b['16'][0]++,i):(__cov_PGUYM_ikLzavDhzifxNvkw.b['16'][1]++,-1);}else{__cov_PGUYM_ikLzavDhzifxNvkw.b['15'][1]++;}__cov_PGUYM_ikLzavDhzifxNvkw.s['61']++;var keys=this._mapKeys,is=this._is,len;__cov_PGUYM_ikLzavDhzifxNvkw.s['62']++;for(i=0,len=keys.length;i<len;++i){__cov_PGUYM_ikLzavDhzifxNvkw.s['63']++;if(is(keys[i],key)){__cov_PGUYM_ikLzavDhzifxNvkw.b['17'][0]++;__cov_PGUYM_ikLzavDhzifxNvkw.s['64']++;return i;}else{__cov_PGUYM_ikLzavDhzifxNvkw.b['17'][1]++;}}__cov_PGUYM_ikLzavDhzifxNvkw.s['65']++;return-1;},_is:isNative(Object.is)?(__cov_PGUYM_ikLzavDhzifxNvkw.b['18'][0]++,Object.is):(__cov_PGUYM_ikLzavDhzifxNvkw.b['18'][1]++,function(a,b){__cov_PGUYM_ikLzavDhzifxNvkw.f['14']++;__cov_PGUYM_ikLzavDhzifxNvkw.s['66']++;if(a===b){__cov_PGUYM_ikLzavDhzifxNvkw.b['19'][0]++;__cov_PGUYM_ikLzavDhzifxNvkw.s['67']++;return(__cov_PGUYM_ikLzavDhzifxNvkw.b['20'][0]++,a!==0)||(__cov_PGUYM_ikLzavDhzifxNvkw.b['20'][1]++,1/a===1/b);}else{__cov_PGUYM_ikLzavDhzifxNvkw.b['19'][1]++;}__cov_PGUYM_ikLzavDhzifxNvkw.s['68']++;return(__cov_PGUYM_ikLzavDhzifxNvkw.b['21'][0]++,a!==a)&&(__cov_PGUYM_ikLzavDhzifxNvkw.b['21'][1]++,b!==b);})},true);__cov_PGUYM_ikLzavDhzifxNvkw.s['69']++;YMap.prototype['delete']=YMap.prototype.remove;__cov_PGUYM_ikLzavDhzifxNvkw.s['70']++;YMap.prototype.forEach=YMap.prototype.each;__cov_PGUYM_ikLzavDhzifxNvkw.s['71']++;YMap.prototype.toJSON=YMap.prototype.entries;__cov_PGUYM_ikLzavDhzifxNvkw.s['72']++;Y.Map=YMap;},'@VERSION@',{'requires':[]});

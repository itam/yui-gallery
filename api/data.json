{
    "project": {
        "name": "SmugMug YUI Gallery API docs",
        "description": "Kickass gallery modules courtesy of your pals at SmugMug.",
        "version": "3.11.0-git",
        "url": "https://github.com/smugmug/yui-gallery"
    },
    "files": {
        "src/sm-dom-form-values/js/form-values.js": {
            "name": "src/sm-dom-form-values/js/form-values.js",
            "modules": {
                "dom-form-values": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/sm-dragdrop/js/plugins/dragdrop-reorder.js": {
            "name": "src/sm-dragdrop/js/plugins/dragdrop-reorder.js",
            "modules": {
                "gallery-sm-dragdrop-reorder": 1
            },
            "classes": {
                "Plugin.DragDrop.Reorder": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-dragdrop/js/dragdrop.js": {
            "name": "src/sm-dragdrop/js/dragdrop.js",
            "modules": {
                "gallery-sm-dragdrop": 1
            },
            "classes": {
                "DragDrop": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-editor/js/extensions/editor-dom.js": {
            "name": "src/sm-editor/js/extensions/editor-dom.js",
            "modules": {
                "gallery-sm-editor-dom": 1
            },
            "classes": {
                "Editor.DOM": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-editor/js/extensions/editor-keys.js": {
            "name": "src/sm-editor/js/extensions/editor-keys.js",
            "modules": {
                "gallery-sm-editor-keys": 1
            },
            "classes": {
                "Editor.Keys": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-editor/js/extensions/editor-link.js": {
            "name": "src/sm-editor/js/extensions/editor-link.js",
            "modules": {
                "gallery-sm-editor-link": 1
            },
            "classes": {
                "Editor.Link": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-editor/js/extensions/editor-queue.js": {
            "name": "src/sm-editor/js/extensions/editor-queue.js",
            "modules": {
                "gallery-sm-editor-queue": 1
            },
            "classes": {
                "Editor.Queue": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-editor/js/extensions/editor-style.js": {
            "name": "src/sm-editor/js/extensions/editor-style.js",
            "modules": {
                "gallery-sm-editor-style": 1
            },
            "classes": {
                "Editor.Style": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-editor/js/extensions/editor-undo.js": {
            "name": "src/sm-editor/js/extensions/editor-undo.js",
            "modules": {
                "gallery-sm-editor-undo": 1
            },
            "classes": {
                "Editor.Undo": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-editor/js/editor-base.js": {
            "name": "src/sm-editor/js/editor-base.js",
            "modules": {
                "gallery-sm-editor-base": 1
            },
            "classes": {
                "Editor.Base": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-editor/js/editor.js": {
            "name": "src/sm-editor/js/editor.js",
            "modules": {
                "gallery-sm-editor": 1
            },
            "classes": {
                "Editor": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-focusmanager/js/focusmanager.js": {
            "name": "src/sm-focusmanager/js/focusmanager.js",
            "modules": {
                "gallery-sm-focusmanager": 1
            },
            "classes": {
                "Plugin.FocusManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-indexed-map/js/indexed-map.js": {
            "name": "src/sm-indexed-map/js/indexed-map.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/sm-map/js/map.js": {
            "name": "src/sm-map/js/map.js",
            "modules": {
                "gallery-sm-map": 1
            },
            "classes": {
                "Map": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-menu/js/plugins/menu-plugin.js": {
            "name": "src/sm-menu/js/plugins/menu-plugin.js",
            "modules": {
                "gallery-sm-menu-plugin": 1
            },
            "classes": {
                "Plugin.Menu": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-menu/js/menu-base.js": {
            "name": "src/sm-menu/js/menu-base.js",
            "modules": {
                "gallery-sm-menu-base": 1
            },
            "classes": {
                "Menu.Base": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-menu/js/menu-item.js": {
            "name": "src/sm-menu/js/menu-item.js",
            "modules": {
                "gallery-sm-menu-item": 1
            },
            "classes": {
                "Menu.Item": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-menu/js/menu-templates.js": {
            "name": "src/sm-menu/js/menu-templates.js",
            "modules": {
                "gallery-sm-menu-templates": 1
            },
            "classes": {
                "Menu.Templates": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-menu/js/menu.js": {
            "name": "src/sm-menu/js/menu.js",
            "modules": {
                "gallery-sm-menu": 1
            },
            "classes": {
                "Menu": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-promise-events/js/events.js": {
            "name": "src/sm-promise-events/js/events.js",
            "modules": {
                "gallery-sm-promise-events": 1
            },
            "classes": {
                "Promise.EventNotifier": 1
            },
            "fors": {},
            "namespaces": {
                "Promise": 1
            }
        },
        "src/sm-selection/js/range.js": {
            "name": "src/sm-selection/js/range.js",
            "modules": {
                "gallery-sm-range": 1
            },
            "classes": {
                "Range": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-selection/js/selection.js": {
            "name": "src/sm-selection/js/selection.js",
            "modules": {
                "gallery-sm-selection": 1
            },
            "classes": {
                "Selection": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-treeview/js/extensions/treeview-sortable.js": {
            "name": "src/sm-treeview/js/extensions/treeview-sortable.js",
            "modules": {
                "gallery-sm-treeview-sortable": 1
            },
            "classes": {
                "TreeView.Sortable": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sm-treeview/js/treeview.js": {
            "name": "src/sm-treeview/js/treeview.js",
            "modules": {
                "gallery-sm-treeview": 1
            },
            "classes": {
                "TreeView": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "dom": {
            "name": "dom",
            "submodules": {
                "dom-form-values": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "dom-form-values": {
            "name": "dom-form-values",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "dom",
            "namespace": "",
            "file": "src/sm-dom-form-values/js/form-values.js",
            "line": 1,
            "description": "Adds a `Y.DOM.formToObject(identifier)` method to extract the values from a\n`<form>` element and return an object map of element name to value(s).",
            "since": "@SINCE@"
        },
        "gallery-sm-dragdrop": {
            "name": "gallery-sm-dragdrop",
            "submodules": {
                "gallery-sm-dragdrop-reorder": 1
            },
            "classes": {
                "Plugin.DragDrop.Reorder": 1,
                "DragDrop": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 19,
            "description": "Provides the `DragDrop` class, a simpler and more efficient drag and drop\nimplementation than the one in YUI core.",
            "itemtype": "main"
        },
        "gallery-sm-dragdrop-reorder": {
            "name": "gallery-sm-dragdrop-reorder",
            "submodules": {},
            "classes": {
                "Plugin.DragDrop.Reorder": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "gallery-sm-dragdrop",
            "namespace": "",
            "file": "src/sm-dragdrop/js/plugins/dragdrop-reorder.js",
            "line": 11,
            "description": "Provides the `Plugin.DragDrop.Reorder` class, a `DragDrop` plugin that adds\ndrag-to-reorder functionality to a collection of nodes."
        },
        "gallery-sm-editor": {
            "name": "gallery-sm-editor",
            "submodules": {
                "gallery-sm-editor-dom": 1,
                "gallery-sm-editor-keys": 1,
                "gallery-sm-editor-link": 1,
                "gallery-sm-editor-queue": 1,
                "gallery-sm-editor-style": 1,
                "gallery-sm-editor-undo": 1,
                "gallery-sm-editor-base": 1
            },
            "classes": {
                "Editor.DOM": 1,
                "Editor.Keys": 1,
                "Editor.Link": 1,
                "Editor.Queue": 1,
                "Editor.Style": 1,
                "Editor.Undo": 1,
                "Editor.Base": 1,
                "Editor": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/sm-editor/js/editor.js",
            "line": 10,
            "description": "Provides `Y.Editor`, a simple but powerful WYSIWYG editor.",
            "itemtype": "main"
        },
        "gallery-sm-editor-dom": {
            "name": "gallery-sm-editor-dom",
            "submodules": {},
            "classes": {
                "Editor.DOM": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "gallery-sm-editor",
            "namespace": "",
            "file": "src/sm-editor/js/extensions/editor-dom.js",
            "line": 10,
            "description": "Provides the `Editor.DOM` utility class."
        },
        "gallery-sm-editor-keys": {
            "name": "gallery-sm-editor-keys",
            "submodules": {},
            "classes": {
                "Editor.Keys": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "gallery-sm-editor",
            "namespace": "",
            "file": "src/sm-editor/js/extensions/editor-keys.js",
            "line": 10,
            "description": "Provides the `Editor.Keys` extension."
        },
        "gallery-sm-editor-link": {
            "name": "gallery-sm-editor-link",
            "submodules": {},
            "classes": {
                "Editor.Link": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "gallery-sm-editor",
            "namespace": "",
            "file": "src/sm-editor/js/extensions/editor-link.js",
            "line": 10,
            "description": "Provides the `Editor.Link` extension."
        },
        "gallery-sm-editor-queue": {
            "name": "gallery-sm-editor-queue",
            "submodules": {},
            "classes": {
                "Editor.Queue": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "gallery-sm-editor",
            "namespace": "",
            "file": "src/sm-editor/js/extensions/editor-queue.js",
            "line": 10,
            "description": "Provides the `Editor.Queue` extension."
        },
        "gallery-sm-editor-style": {
            "name": "gallery-sm-editor-style",
            "submodules": {},
            "classes": {
                "Editor.Style": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "gallery-sm-editor",
            "namespace": "",
            "file": "src/sm-editor/js/extensions/editor-style.js",
            "line": 10,
            "description": "Provides the `Editor.Style` extension."
        },
        "gallery-sm-editor-undo": {
            "name": "gallery-sm-editor-undo",
            "submodules": {},
            "classes": {
                "Editor.Undo": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "gallery-sm-editor",
            "namespace": "",
            "file": "src/sm-editor/js/extensions/editor-undo.js",
            "line": 10,
            "description": "Provides the `Editor.Undo` extension."
        },
        "gallery-sm-editor-base": {
            "name": "gallery-sm-editor-base",
            "submodules": {},
            "classes": {
                "Editor.Base": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "gallery-sm-editor",
            "namespace": "",
            "file": "src/sm-editor/js/editor-base.js",
            "line": 12,
            "description": "Provides `Y.Editor.Base`, the core implementation of the SmugMug editor."
        },
        "gallery-sm-focusmanager": {
            "name": "gallery-sm-focusmanager",
            "submodules": {},
            "classes": {
                "Plugin.FocusManager": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 11,
            "description": "Provides the FocusManager Node plugin, which makes it easy to manage keyboard\nfocus among the descendants of a node.",
            "itemtype": "main"
        },
        "gallery-sm-map": {
            "name": "gallery-sm-map",
            "submodules": {},
            "classes": {
                "Map": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/sm-map/js/map.js",
            "line": 10,
            "description": "Provides the `Y.Map` data structure.",
            "itemtype": "main"
        },
        "gallery-sm-menu": {
            "name": "gallery-sm-menu",
            "submodules": {
                "gallery-sm-menu-plugin": 1,
                "gallery-sm-menu-base": 1,
                "gallery-sm-menu-item": 1,
                "gallery-sm-menu-templates": 1
            },
            "classes": {
                "Plugin.Menu": 1,
                "Menu.Base": 1,
                "Menu.Item": 1,
                "Menu.Templates": 1,
                "Menu": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/sm-menu/js/menu.js",
            "line": 10,
            "description": "Provides the `Y.Menu` widget.",
            "itemtype": "main"
        },
        "gallery-sm-menu-plugin": {
            "name": "gallery-sm-menu-plugin",
            "submodules": {},
            "classes": {
                "Plugin.Menu": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "gallery-sm-menu",
            "namespace": "",
            "file": "src/sm-menu/js/plugins/menu-plugin.js",
            "line": 8,
            "description": "Provides the `Y.Plugin.Menu` Node plugin."
        },
        "gallery-sm-menu-base": {
            "name": "gallery-sm-menu-base",
            "submodules": {},
            "classes": {
                "Menu.Base": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "gallery-sm-menu",
            "namespace": "",
            "file": "src/sm-menu/js/menu-base.js",
            "line": 10,
            "description": "Provides `Menu.Base`."
        },
        "gallery-sm-menu-item": {
            "name": "gallery-sm-menu-item",
            "submodules": {},
            "classes": {
                "Menu.Item": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "gallery-sm-menu",
            "namespace": "",
            "file": "src/sm-menu/js/menu-item.js",
            "line": 10,
            "description": "Provides the `Menu.Item` class."
        },
        "gallery-sm-menu-templates": {
            "name": "gallery-sm-menu-templates",
            "submodules": {},
            "classes": {
                "Menu.Templates": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "gallery-sm-menu",
            "namespace": "",
            "file": "src/sm-menu/js/menu-templates.js",
            "line": 8,
            "description": "Provides templates for `Menu`."
        },
        "gallery-sm-promise-events": {
            "name": "gallery-sm-promise-events",
            "submodules": {},
            "classes": {
                "Promise.EventNotifier": 1
            },
            "fors": {},
            "namespaces": {
                "Promise": 1
            },
            "tag": "module",
            "file": "src/sm-promise-events/js/events.js",
            "line": 15,
            "description": "Provides a `Y.Promise.EventNotifier` class. Instances can be used to decorate\n`Y.Promise` instances with an `on()` method to allow for non-resolution related\nevent notifications such as cancelation or progress. Additionally, the\npromise's `then` method is \"infected\" to propagate the mixin to its returned\npromises as well, allowing notifications to cascade throughout a promise chain.",
            "since": "@@SINCE@@"
        },
        "gallery-sm-selection": {
            "name": "gallery-sm-selection",
            "submodules": {
                "gallery-sm-range": 1
            },
            "classes": {
                "Range": 1,
                "Selection": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/sm-selection/js/selection.js",
            "line": 11,
            "description": "Provides the `Selection` class, which normalizes text selection functionality\nacross browsers.",
            "itemtype": "main"
        },
        "gallery-sm-range": {
            "name": "gallery-sm-range",
            "submodules": {},
            "classes": {
                "Range": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "gallery-sm-selection",
            "namespace": "",
            "file": "src/sm-selection/js/range.js",
            "line": 15,
            "description": "Provides the `Range` class, which normalizes Range behavior across browsers."
        },
        "gallery-sm-treeview": {
            "name": "gallery-sm-treeview",
            "submodules": {
                "gallery-sm-treeview-sortable": 1
            },
            "classes": {
                "TreeView.Sortable": 1,
                "TreeView": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/sm-treeview/js/treeview.js",
            "line": 10,
            "description": "Provides the `Y.TreeView` widget.",
            "itemtype": "main"
        },
        "gallery-sm-treeview-sortable": {
            "name": "gallery-sm-treeview-sortable",
            "submodules": {},
            "classes": {
                "TreeView.Sortable": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "gallery-sm-treeview",
            "namespace": "",
            "file": "src/sm-treeview/js/extensions/treeview-sortable.js",
            "line": 9,
            "description": "Provides `Y.TreeView.Sortable`, a `Y.TreeView` extension that mixes in\n`Y.Tree.Sortable` and provides related TreeView-specific functionality."
        }
    },
    "classes": {
        "Plugin.DragDrop.Reorder": {
            "name": "Plugin.DragDrop.Reorder",
            "shortname": "Plugin.DragDrop.Reorder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-sm-dragdrop",
            "submodule": "gallery-sm-dragdrop-reorder",
            "namespace": "",
            "file": "src/sm-dragdrop/js/plugins/dragdrop-reorder.js",
            "line": 11,
            "description": "A plugin for `DragDrop` that adds drag-to-reorder functionality to a collection\nof nodes.",
            "extends": "Plugin.Base",
            "is_constructor": 1
        },
        "DragDrop": {
            "name": "DragDrop",
            "shortname": "DragDrop",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-sm-dragdrop",
            "namespace": "",
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 19,
            "description": "A simpler and more efficient drag and drop implementation than the one in YUI\ncore. Highly optimized for delegation-based drag targets, remaining responsive\nand memory-efficient even when managing thousands of draggable nodes.",
            "extends": "Base",
            "is_constructor": 1
        },
        "Editor.DOM": {
            "name": "Editor.DOM",
            "shortname": "Editor.DOM",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-dom",
            "namespace": "",
            "file": "src/sm-editor/js/extensions/editor-dom.js",
            "line": 10,
            "description": "DOM utility methods for `Editor.Base`"
        },
        "Editor.Keys": {
            "name": "Editor.Keys",
            "shortname": "Editor.Keys",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Editor.Base",
                "Editor"
            ],
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-keys",
            "namespace": "",
            "file": "src/sm-editor/js/extensions/editor-keys.js",
            "line": 10,
            "description": "Extension for `Editor.Base` that adds support for configurable keyboard\nshortcuts, including a set of default shortcuts.",
            "is_constructor": 1,
            "extends": "Base"
        },
        "Editor.Link": {
            "name": "Editor.Link",
            "shortname": "Editor.Link",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Editor.Base",
                "Editor"
            ],
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-link",
            "namespace": "",
            "file": "src/sm-editor/js/extensions/editor-link.js",
            "line": 10,
            "description": "Extension for `Editor.Base` that enables inserting links",
            "is_constructor": 1,
            "extends": "Base"
        },
        "Editor.Queue": {
            "name": "Editor.Queue",
            "shortname": "Editor.Queue",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Editor.Base"
            ],
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-queue",
            "namespace": "",
            "file": "src/sm-editor/js/extensions/editor-queue.js",
            "line": 10,
            "description": "Extension for `Editor.Base` that queues commands",
            "is_constructor": 1,
            "extends": "Base"
        },
        "Editor.Style": {
            "name": "Editor.Style",
            "shortname": "Editor.Style",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Editor.Base",
                "Editor"
            ],
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-style",
            "namespace": "",
            "file": "src/sm-editor/js/extensions/editor-style.js",
            "line": 10,
            "description": "Extension for `Editor.Base` that normalizes style commands into css properties",
            "is_constructor": 1,
            "extends": "Base"
        },
        "Editor.Undo": {
            "name": "Editor.Undo",
            "shortname": "Editor.Undo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Editor.Base",
                "Editor"
            ],
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-undo",
            "namespace": "",
            "file": "src/sm-editor/js/extensions/editor-undo.js",
            "line": 10,
            "description": "Extension for `Editor.Base` that adds a cross-browser undo/redo stack.\n\nWhen mixed into an editor that also mixes in the `Editor.Keys` extension, handy\nundo/redo keyboard shortcuts and triggers will be added as well.",
            "is_constructor": 1,
            "extends": "Base"
        },
        "Editor.Base": {
            "name": "Editor.Base",
            "shortname": "Editor.Base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base",
            "namespace": "",
            "file": "src/sm-editor/js/editor-base.js",
            "line": 12,
            "description": "Base implementation of the SmugMug editor. Provides core editor functionality,\nbut no undo stack, keyboard shortcuts, etc.",
            "is_constructor": 1,
            "extends": "View"
        },
        "Editor": {
            "name": "Editor",
            "shortname": "Editor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-sm-editor",
            "namespace": "",
            "file": "src/sm-editor/js/editor.js",
            "line": 10,
            "description": "A simple but powerful WYSIWYG editor.",
            "is_constructor": 1,
            "extends": "Editor.Base",
            "uses": [
                "Editor.Keys",
                "Editor.Link",
                "Editor.Style",
                "Editor.Undo"
            ]
        },
        "Plugin.FocusManager": {
            "name": "Plugin.FocusManager",
            "shortname": "Plugin.FocusManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-sm-focusmanager",
            "namespace": "",
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 11,
            "description": "Node plugin that makes it easy to manage keyboard focus among the descendants of\na node.\n\n### Example: Simple flat list\n\n    <ul id=\"list\">\n        <li>Item 1</li>\n        <li>Item 2</li>\n        <li>Item 3</li>\n    </ul>\n\n    <script>\n    YUI().use('gallery-sm-focusmanager', function (Y) {\n        // Make the list items in #list keyboard-focusable using the arrow keys.\n        Y.one('#list').plug(Y.Plugin.FocusManager);\n    });\n    </script>\n\n### Example: Hierarchical list\n\n    <ul id=\"list\">\n        <li>\n            Item 1\n            <ul>\n                <li>Item 1.1</li>\n                <li>\n                    Item 1.2\n                    <ul>\n                        <li>Item 1.2.1</li>\n                        <li>Item 1.2.2</li>\n                    </ul>\n                </li>\n            </ul>\n        </li>\n        <li>Item 2</li>\n        <li>Item 3</li>\n    </ul>\n\n    <script>\n    YUI().use('gallery-sm-focusmanager', function (Y) {\n        // Make the list items in #list keyboard-focusable and allow\n        // descending/ascending into and out of nested lists using the right and\n        // left arrow keys.\n        Y.one('#list').plug(Y.Plugin.FocusManager, {\n            containerSelector: 'ul'\n        });\n    });\n    </script>",
            "extends": "Plugin.Base",
            "is_constructor": 1
        },
        "Map": {
            "name": "Map",
            "shortname": "Map",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-sm-map",
            "namespace": "",
            "file": "src/sm-map/js/map.js",
            "line": 10,
            "description": "An ordered map data structure with an interface and behavior similar to (but not\nexactly the same as) [ECMAScript 6 Maps][es6-maps].\n\n[es6-maps]:http://people.mozilla.org/~jorendorff/es6-draft.html#sec-15.14",
            "is_constructor": 1,
            "params": [
                {
                    "name": "entries",
                    "description": "Array of entries to add to the map. Each entry should\n    itself be an array in which the first item is the key and the second item is\n    the value for that entry.",
                    "type": "Array[]",
                    "optional": true
                }
            ]
        },
        "Plugin.Menu": {
            "name": "Plugin.Menu",
            "shortname": "Plugin.Menu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-plugin",
            "namespace": "",
            "file": "src/sm-menu/js/plugins/menu-plugin.js",
            "line": 8,
            "description": "Node plugin that toggles a dropdown menu when the host node is clicked.\n\n### Example\n\n    YUI().use('menu-plugin', function (Y) {\n        var button = Y.one('#button');\n\n        // Plug a dropdown menu into the button.\n        button.plug(Y.Plugin.Menu, {\n            items: [\n                {label: 'Item One'},\n                {label: 'Item Two'},\n                {label: 'Item Three'}\n            ]\n        });\n\n        // The menu will automatically be displayed whenever the button is\n        // clicked, but you can also toggle it manually.\n        button.menu.toggleVisible();\n    });",
            "is_constructor": 1,
            "extends": "Menu",
            "uses": [
                "Plugin.Base"
            ]
        },
        "Menu.Base": {
            "name": "Menu.Base",
            "shortname": "Menu.Base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-base",
            "namespace": "",
            "file": "src/sm-menu/js/menu-base.js",
            "line": 10,
            "description": "Base menu functionality.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Config options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "items",
                            "description": "Array of `Menu.Item` instances\n        or menu item config objects to add to this menu.",
                            "type": "Menu.Item[]|Object[]",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Tree"
        },
        "Menu.Item": {
            "name": "Menu.Item",
            "shortname": "Menu.Item",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-item",
            "namespace": "",
            "file": "src/sm-menu/js/menu-item.js",
            "line": 10,
            "description": "Represents a single menu item in a `Menu`.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "menu",
                    "description": "`Menu` instance with which this node should be associated.",
                    "type": "Menu"
                },
                {
                    "name": "config",
                    "description": "Configuration hash for this menu item. Supports all the\n    config properties of `Tree.Node` in addition to the following.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "state",
                            "description": "State hash for this menu item.",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "disabled",
                                    "description": "If `true`, this menu item\n            will be disabled, and will not be clickable or selectable.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "hidden",
                                    "description": "If `true`, this menu item\n            will be hidden.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                }
                            ]
                        },
                        {
                            "name": "type",
                            "description": "Type of this menu item. May be 'item',\n        'heading', or 'separator'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'item'"
                        },
                        {
                            "name": "url",
                            "description": "URL associated with this item. If this item\n        is of type 'item', clicking on the item will navigate to this URL.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'#'"
                        }
                    ]
                }
            ],
            "extends": "Tree.Node"
        },
        "Menu.Templates": {
            "name": "Menu.Templates",
            "shortname": "Menu.Templates",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-templates",
            "namespace": "",
            "file": "src/sm-menu/js/menu-templates.js",
            "line": 8,
            "description": "Templates for `Menu`."
        },
        "Menu": {
            "name": "Menu",
            "shortname": "Menu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-sm-menu",
            "namespace": "",
            "file": "src/sm-menu/js/menu.js",
            "line": 10,
            "description": "Menu widget.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Config options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "sourceNode",
                            "description": "Node instance, HTML\n    element, or selector string for a node (usually a `<ul>` or `<ol>`) whose\n    structure should be parsed and used to generate this menu's contents. This\n    node will be removed from the DOM after being parsed.",
                            "type": "HTMLElement|Node|String",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Menu.Base",
            "uses": [
                "View"
            ]
        },
        "Promise.EventNotifier": {
            "name": "Promise.EventNotifier",
            "shortname": "Promise.EventNotifier",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-sm-promise-events",
            "namespace": "Promise",
            "file": "src/sm-promise-events/js/events.js",
            "line": 15,
            "is_constructor": 1
        },
        "Range": {
            "name": "Range",
            "shortname": "Range",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range",
            "namespace": "",
            "file": "src/sm-selection/js/range.js",
            "line": 15,
            "description": "Provides a friendly cross-browser Range API similar to the API defined in the\nDOM Range specification.",
            "params": [
                {
                    "name": "range",
                    "description": "Native Range object to wrap. If not provided, a\n    new Range will be created.",
                    "type": "window.Range",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "Selection": {
            "name": "Selection",
            "shortname": "Selection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-sm-selection",
            "namespace": "",
            "file": "src/sm-selection/js/selection.js",
            "line": 11,
            "description": "Normalizes text selection functionality across browsers.",
            "is_constructor": 1
        },
        "TreeView.Sortable": {
            "name": "TreeView.Sortable",
            "shortname": "TreeView.Sortable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "TreeView"
            ],
            "module": "gallery-sm-treeview",
            "submodule": "gallery-sm-treeview-sortable",
            "namespace": "",
            "file": "src/sm-treeview/js/extensions/treeview-sortable.js",
            "line": 9,
            "description": "Extension for `Y.TreeView` that mixes in `Y.Tree.Sortable` and provides related\nTreeView-specific functionality (such as re-rendering a node after it's sorted).",
            "is_constructor": 1,
            "extends": "Tree.Sortable"
        },
        "TreeView": {
            "name": "TreeView",
            "shortname": "TreeView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-sm-treeview",
            "namespace": "",
            "file": "src/sm-treeview/js/treeview.js",
            "line": 10,
            "description": "TreeView widget.",
            "is_constructor": 1,
            "extends": "View",
            "uses": [
                "Tree",
                "Tree.Labelable",
                "Tree.Openable",
                "Tree.Selectable"
            ]
        }
    },
    "classitems": [
        {
            "file": "src/sm-dom-form-values/js/form-values.js",
            "line": 11,
            "description": "Return an object with form values from `<input>`s, `<select>`s, and\n`<textarea>`s, keyed by field name. Fields with multiple values will have those\nvalues in an array.\n\n* Disabled fields will be ignored unless the _includeDisabled_ param is truthy.\n* If no radio or checkbox is checked, the returned object will not contain a\n    reference to it.\n* If no option is selected in a single select, the first option value will be\n    used.\n* if no option is selected in a multi-select, it will be omitted from the\n    returned object.",
            "itemtype": "method",
            "name": "formToObject",
            "params": [
                {
                    "name": "identifier",
                    "description": "The DOM element, Node, or selector for\n                                the `<form>`",
                    "type": "Element|Node|String"
                },
                {
                    "name": "includeDisabled",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Plugin.DragDrop.Reorder",
            "module": "dom",
            "submodule": "dom-form-values"
        },
        {
            "file": "src/sm-dragdrop/js/plugins/dragdrop-reorder.js",
            "line": 22,
            "description": "Fired after a drop occurs that results in reorderable nodes being reordered.",
            "itemtype": "event",
            "name": "reorder",
            "params": [
                {
                    "name": "above",
                    "description": "`true` if _dragNode_ was dropped above the center of\n    _node_.",
                    "type": "Boolean"
                },
                {
                    "name": "after",
                    "description": "`true` if _dragNode_ was dropped after _node_.",
                    "type": "Boolean"
                },
                {
                    "name": "before",
                    "description": "`true` if _dragNode_ was dropped before _node_.",
                    "type": "Boolean"
                },
                {
                    "name": "below",
                    "description": "`true` if _dragNode_ was dropped below the center of\n    _node_.",
                    "type": "Boolean"
                },
                {
                    "name": "deltaXY",
                    "description": "Number of pixels the pointer has moved on the X and Y\n    axes since the drag operation began.",
                    "type": "Number[]"
                },
                {
                    "name": "dragNode",
                    "description": "The node that was dropped.",
                    "type": "Node"
                },
                {
                    "name": "inside",
                    "description": "`true` if _dragNode_ was dropped inside _node_.",
                    "type": "Boolean"
                },
                {
                    "name": "left",
                    "description": "`true` if _dragNode_ was dropped left of the center of\n    _node_.",
                    "type": "Boolean"
                },
                {
                    "name": "node",
                    "description": "The reorderable node before or after which the pointer was\n    positioned when the drop occurred.",
                    "type": "Node"
                },
                {
                    "name": "pageXY",
                    "description": "Current X and Y coordinates of the pointer.",
                    "type": "Number[]"
                },
                {
                    "name": "right",
                    "description": "`true` if _dragNode_ was dropped right of the center of\n    _node_.",
                    "type": "Boolean"
                },
                {
                    "name": "startXY",
                    "description": "X and Y coordinates of the pointer when the drag\n    operation began.",
                    "type": "Number[]"
                }
            ],
            "preventable": "_defReorderFn",
            "class": "Plugin.DragDrop.Reorder",
            "module": "gallery-sm-dragdrop",
            "submodule": "gallery-sm-dragdrop-reorder"
        },
        {
            "file": "src/sm-dragdrop/js/plugins/dragdrop-reorder.js",
            "line": 49,
            "description": "Fired when the pointer is positioned after a reorderable node during a drag\noperation.",
            "itemtype": "event",
            "name": "reorderafter",
            "params": [
                {
                    "name": "above",
                    "description": "`true` if the pointer is above the center of _node_.",
                    "type": "Boolean"
                },
                {
                    "name": "below",
                    "description": "`true` if the pointer is below the center of _node_.",
                    "type": "Boolean"
                },
                {
                    "name": "deltaXY",
                    "description": "Number of pixels the pointer has moved on the X and Y\n    axes since the drag operation began.",
                    "type": "Number[]"
                },
                {
                    "name": "dragNode",
                    "description": "The node being dragged.",
                    "type": "Node"
                },
                {
                    "name": "inside",
                    "description": "`true` if the pointer is inside _node_.",
                    "type": "Boolean"
                },
                {
                    "name": "left",
                    "description": "`true` if the pointer is left of the center of _node_.",
                    "type": "Boolean"
                },
                {
                    "name": "node",
                    "description": "The reorderable node after which the pointer is currently\n    positioned.",
                    "type": "Node"
                },
                {
                    "name": "pageXY",
                    "description": "Current X and Y coordinates of the pointer.",
                    "type": "Number[]"
                },
                {
                    "name": "right",
                    "description": "`true` if the pointer is right of the center of _node_.",
                    "type": "Boolean"
                },
                {
                    "name": "startXY",
                    "description": "X and Y coordinates of the pointer when the drag\n    operation began.",
                    "type": "Number[]"
                }
            ],
            "preventable": "_defReorderAfterFn",
            "class": "Plugin.DragDrop.Reorder",
            "module": "gallery-sm-dragdrop",
            "submodule": "gallery-sm-dragdrop-reorder"
        },
        {
            "file": "src/sm-dragdrop/js/plugins/dragdrop-reorder.js",
            "line": 71,
            "description": "Fired when the pointer is positioned before a reorderable node during a drag\noperation.",
            "itemtype": "event",
            "name": "reorderbefore",
            "params": [
                {
                    "name": "above",
                    "description": "`true` if the pointer is above the center of _node_.",
                    "type": "Boolean"
                },
                {
                    "name": "below",
                    "description": "`true` if the pointer is below the center of _node_.",
                    "type": "Boolean"
                },
                {
                    "name": "deltaXY",
                    "description": "Number of pixels the pointer has moved on the X and Y\n    axes since the drag operation began.",
                    "type": "Number[]"
                },
                {
                    "name": "dragNode",
                    "description": "The node being dragged.",
                    "type": "Node"
                },
                {
                    "name": "inside",
                    "description": "`true` if the pointer is inside _node_.",
                    "type": "Boolean"
                },
                {
                    "name": "left",
                    "description": "`true` if the pointer is left of the center of _node_.",
                    "type": "Boolean"
                },
                {
                    "name": "node",
                    "description": "The reorderable node before which the pointer is currently\n    positioned.",
                    "type": "Node"
                },
                {
                    "name": "pageXY",
                    "description": "Current X and Y coordinates of the pointer.",
                    "type": "Number[]"
                },
                {
                    "name": "right",
                    "description": "`true` if the pointer is right of the center of _node_.",
                    "type": "Boolean"
                },
                {
                    "name": "startXY",
                    "description": "X and Y coordinates of the pointer when the drag\n    operation began.",
                    "type": "Number[]"
                }
            ],
            "preventable": "_defReorderBeforeFn",
            "class": "Plugin.DragDrop.Reorder",
            "module": "gallery-sm-dragdrop",
            "submodule": "gallery-sm-dragdrop-reorder"
        },
        {
            "file": "src/sm-dragdrop/js/plugins/dragdrop-reorder.js",
            "line": 93,
            "description": "Fired when the reorderable phase of a drag operation ends.\n\nThis could occur because the drag operation itself ended, or because the pointer\nwas dragged outside the reorderable container. If the reorderable phase ended\nwithout causing any items to be reordered, the `canceled` property on this\nevent's facade will be `true`.",
            "itemtype": "event",
            "name": "reorderend",
            "params": [
                {
                    "name": "canceled",
                    "description": "`true` if the reorderable phase ended without causing\n    any items to be reordered.",
                    "type": "Boolean"
                },
                {
                    "name": "deltaXY",
                    "description": "Number of pixels the pointer has moved on the X and Y\n    axes since the drag operation began.",
                    "type": "Number[]"
                },
                {
                    "name": "dragNode",
                    "description": "The node being dragged.",
                    "type": "Node"
                },
                {
                    "name": "pageXY",
                    "description": "Current X and Y coordinates of the pointer.",
                    "type": "Number[]"
                },
                {
                    "name": "startXY",
                    "description": "X and Y coordinates of the pointer when the drag\n    operation began.",
                    "type": "Number[]"
                }
            ],
            "class": "Plugin.DragDrop.Reorder",
            "module": "gallery-sm-dragdrop",
            "submodule": "gallery-sm-dragdrop-reorder"
        },
        {
            "file": "src/sm-dragdrop/js/plugins/dragdrop-reorder.js",
            "line": 113,
            "description": "Fired when the reorderable phase of a drag operation starts.\n\nThis could occur because the drag operation itself started, or because the\npointer was dragged back inside the reorderable container after having\npreviously left it.\n\nTo prevent reordering during the current drag operation, call `preventDefault()`\non this event's facade.",
            "itemtype": "event",
            "name": "reorderstart",
            "params": [
                {
                    "name": "deltaXY",
                    "description": "Number of pixels the pointer has moved on the X and Y\n    axes since the drag operation began.",
                    "type": "Number[]"
                },
                {
                    "name": "dragNode",
                    "description": "The node being dragged.",
                    "type": "Node"
                },
                {
                    "name": "pageXY",
                    "description": "Current X and Y coordinates of the pointer.",
                    "type": "Number[]"
                },
                {
                    "name": "startXY",
                    "description": "X and Y coordinates of the pointer when the drag\n    operation began.",
                    "type": "Number[]"
                }
            ],
            "preventable": "_defReorderStartFn",
            "class": "Plugin.DragDrop.Reorder",
            "module": "gallery-sm-dragdrop",
            "submodule": "gallery-sm-dragdrop-reorder"
        },
        {
            "file": "src/sm-dragdrop/js/plugins/dragdrop-reorder.js",
            "line": 208,
            "description": "Attribute change event handler that caches the new value of the attribute in\na protected property on this class.",
            "itemtype": "method",
            "name": "_cacheAttrValue",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Plugin.DragDrop.Reorder",
            "module": "gallery-sm-dragdrop",
            "submodule": "gallery-sm-dragdrop-reorder"
        },
        {
            "file": "src/sm-dragdrop/js/plugins/dragdrop-reorder.js",
            "line": 408,
            "description": "Utility method for lazily publishing and firing events.",
            "itemtype": "method",
            "name": "_publishAndFire",
            "params": [
                {
                    "name": "name",
                    "description": "Event name to fire.",
                    "type": "String"
                },
                {
                    "name": "facade",
                    "description": "Event facade.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "Event options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "silent",
                            "description": "Whether the default handler\n        should be executed directly without actually firing the event.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Plugin.DragDrop.Reorder",
            "module": "gallery-sm-dragdrop",
            "submodule": "gallery-sm-dragdrop-reorder"
        },
        {
            "file": "src/sm-dragdrop/js/plugins/dragdrop-reorder.js",
            "line": 596,
            "description": "Orientation of the reorderable items. May be one of the following\nstrings:\n\n- **column** - for items in a single vertical column\n- **grid** - for items in a grid-like pattern that may have both columns\n  and rows.\n- **row** - for items in a single horizontal row\n\nThis affects how before/after positions are calculated. The default is\n**grid**.",
            "itemtype": "attribute",
            "name": "orientation",
            "type": "String",
            "default": "'grid'",
            "class": "Plugin.DragDrop.Reorder",
            "module": "gallery-sm-dragdrop",
            "submodule": "gallery-sm-dragdrop-reorder"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 36,
            "description": "Fired whenever the pointer moves during a drag operation.\n\nCall the `preventDefault()` method on this event's facade to prevent the dragged\nnode (or its proxy) from being moved to the new location, and to prevent drop\nzone intersections from being calculated.",
            "itemtype": "event",
            "name": "drag",
            "params": [
                {
                    "name": "deltaXY",
                    "description": "Number of pixels the pointer has moved on the X and Y\n    axes since the drag operation began.",
                    "type": "Number[]"
                },
                {
                    "name": "dragNode",
                    "description": "The node being dragged.",
                    "type": "Node"
                },
                {
                    "name": "pageXY",
                    "description": "Current X and Y coordinates of the pointer.",
                    "type": "Number[]"
                },
                {
                    "name": "startXY",
                    "description": "X and Y coordinates of the pointer when the drag\n    operation began.",
                    "type": "Number[]"
                }
            ],
            "preventable": "_defDragFn",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 54,
            "description": "Fired after a drag operation ends or is canceled.",
            "itemtype": "event",
            "name": "dragend",
            "params": [
                {
                    "name": "deltaXY",
                    "description": "Number of pixels the pointer has moved on the X and Y\n    axes since the drag operation began.",
                    "type": "Number[]"
                },
                {
                    "name": "dragNode",
                    "description": "The node that was dragged.",
                    "type": "Node"
                },
                {
                    "name": "dropped",
                    "description": "Whether or not the drag operation resulted in a\n    successful drop.",
                    "type": "Boolean"
                },
                {
                    "name": "pageXY",
                    "description": "Current X and Y coordinates of the pointer.",
                    "type": "Number[]"
                },
                {
                    "name": "startXY",
                    "description": "X and Y coordinates of the pointer when the drag\n    operation began.",
                    "type": "Number[]"
                }
            ],
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 69,
            "description": "Fired when the pointer enters a drop zone during a drag operation.\n\nTo prevent the drop zone from being treated as a valid drop target, call\n`preventDefault()` on this event's facade.",
            "itemtype": "event",
            "name": "dragenter",
            "params": [
                {
                    "name": "deltaXY",
                    "description": "Number of pixels the pointer has moved on the X and Y\n    axes since the drag operation began.",
                    "type": "Number[]"
                },
                {
                    "name": "dragNode",
                    "description": "The node being dragged.",
                    "type": "Node"
                },
                {
                    "name": "dropNode",
                    "description": "The node representing the drop zone.",
                    "type": "Node"
                },
                {
                    "name": "pageXY",
                    "description": "Current X and Y coordinates of the pointer.",
                    "type": "Number[]"
                },
                {
                    "name": "startXY",
                    "description": "X and Y coordinates of the pointer when the drag\n    operation began.",
                    "type": "Number[]"
                }
            ],
            "preventable": "_defDragEnterFn",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 87,
            "description": "Fired after the pointer leaves a drop zone during a drag operation.",
            "itemtype": "event",
            "name": "dragleave",
            "params": [
                {
                    "name": "deltaXY",
                    "description": "Number of pixels the pointer has moved on the X and Y\n    axes since the drag operation began.",
                    "type": "Number[]"
                },
                {
                    "name": "dragNode",
                    "description": "The node being dragged.",
                    "type": "Node"
                },
                {
                    "name": "dropNode",
                    "description": "The node representing the drop zone.",
                    "type": "Node"
                },
                {
                    "name": "pageXY",
                    "description": "Current X and Y coordinates of the pointer.",
                    "type": "Number[]"
                },
                {
                    "name": "startXY",
                    "description": "X and Y coordinates of the pointer when the drag\n    operation began.",
                    "type": "Number[]"
                }
            ],
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 101,
            "description": "Fired when the pointer moves over a drop zone during a drag operation.",
            "itemtype": "event",
            "name": "dragover",
            "params": [
                {
                    "name": "deltaXY",
                    "description": "Number of pixels the pointer has moved on the X and Y\n    axes since the drag operation began.",
                    "type": "Number[]"
                },
                {
                    "name": "dragNode",
                    "description": "The node being dragged.",
                    "type": "Node"
                },
                {
                    "name": "dropNode",
                    "description": "The node representing the drop zone.",
                    "type": "Node"
                },
                {
                    "name": "pageXY",
                    "description": "Current X and Y coordinates of the pointer.",
                    "type": "Number[]"
                },
                {
                    "name": "startXY",
                    "description": "X and Y coordinates of the pointer when the drag\n    operation began.",
                    "type": "Number[]"
                }
            ],
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 115,
            "description": "Fired when a drag operation begins.\n\nYou can override the pointer offset specified in the `pointerOffset` attribute\nby setting a `pointerOffset` property on the event facade during the \"on\" phase\nof this event. This custom pointer offset will then be used only for the current\ndrag operation.\n\nTo cancel the drag operation, call `preventDefault()` on this event's facade.",
            "itemtype": "event",
            "name": "dragstart",
            "params": [
                {
                    "name": "dragNode",
                    "description": "The node being dragged.",
                    "type": "Node"
                },
                {
                    "name": "pageXY",
                    "description": "Current X and Y coordinates of the pointer.",
                    "type": "Number[]"
                }
            ],
            "preventable": "_defDragStartFn",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 132,
            "description": "Fired after a draggable node is dropped onto a node marked as a drop zone.",
            "itemtype": "event",
            "name": "drop",
            "params": [
                {
                    "name": "deltaXY",
                    "description": "Number of pixels the pointer has moved on the X and Y\n    axes since the drag operation began.",
                    "type": "Number[]"
                },
                {
                    "name": "dragNode",
                    "description": "The node being dragged.",
                    "type": "Node"
                },
                {
                    "name": "dropNode",
                    "description": "The node representing the drop zone.",
                    "type": "Node"
                },
                {
                    "name": "pageXY",
                    "description": "Current X and Y coordinates of the pointer.",
                    "type": "Number[]"
                },
                {
                    "name": "startXY",
                    "description": "X and Y coordinates of the pointer when the drag\n    operation began.",
                    "type": "Number[]"
                }
            ],
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 149,
            "description": "CSS class names used by DragDrop.",
            "itemtype": "property",
            "name": "classNames",
            "type": "Object",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop",
            "subprops": [
                {
                    "name": "dragging",
                    "description": "Class name applied to a node or proxy node that's\n    being dragged."
                },
                {
                    "name": "dragover",
                    "description": "Class name applied to a dropzone node over which\n    a draggable node is currently being dragged."
                },
                {
                    "name": "droppable",
                    "description": "Class name applied to a node or proxy node\n    that's currently being dragged and can be dropped."
                }
            ]
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 195,
            "description": "Attaches event handlers.",
            "itemtype": "method",
            "name": "_attachEvents",
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 254,
            "description": "Detaches event handlers.",
            "itemtype": "method",
            "name": "_detachEvents",
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 269,
            "description": "Synchronizes the internal cache of dropzone node locations, which is used to\ndetermine whether a dragged node may be dropped.\n\nYou should call this method if you modify the DOM or change the position or\nmetrics of a dropzone node during a drag operation. Otherwise, dropzone\npositions may be miscalculated.\n\nCalling this method when a drag operation is not in progress will have no\neffect.",
            "itemtype": "method",
            "name": "sync",
            "chainable": 1,
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 298,
            "description": "Attribute change event handler that caches the new value of the attribute in\na protected property on this class.",
            "itemtype": "method",
            "name": "_cacheAttrValue",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 310,
            "description": "Caches bounding rect information for every node in the container that\nmatches the `dropSelector`.\n\nThis is used during a drag to compute dropzone intersections with the\ndragged node, since mouse events can't be used when the dragged node\nobscures the dropzone.",
            "itemtype": "method",
            "name": "_cacheBoundingRects",
            "return": {
                "description": "Array of bounding rects.",
                "type": "Object[]"
            },
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 347,
            "description": "Caches bounding rect information for all scrollable elements.\n\nThis is used during a drag to figure out when we need to auto-scroll a node\nthe pointer is being dragged over.",
            "itemtype": "method",
            "name": "_cacheScrollRects",
            "return": {
                "description": "Array of bounding rects.",
                "type": "Object[]"
            },
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 405,
            "description": "Ends a drag operation, cleans up after it, and fires a `dragend` event.",
            "itemtype": "method",
            "name": "_endDrag",
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 437,
            "description": "Ends a pending drag operation and cleans up after the pending state.\n\nThis doesn't prevent a drag operation from starting; it just cleans up\ntemporary state that's only necessary when a drag is pending.",
            "itemtype": "method",
            "name": "_endPendingDrag",
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 451,
            "description": "Searches for a cached drop zone bounding rect that intersects with the\ncurrent pointer position, and returns the intersected element if found.",
            "itemtype": "method",
            "name": "_findDropIntersection",
            "return": {
                "description": "Intersected drop zone element, or `null` if no\n    intersection found.",
                "type": "HTMLElement|null"
            },
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 491,
            "description": "Searches for cached scroll zone bounding rects in which the pointer is\ncurrently within the scroll margin (the area near an element's border that\nshould cause the element to scroll).\n\nReturns an array of all intersected scroll zones.",
            "itemtype": "method",
            "name": "_findScrollIntersections",
            "return": {
                "description": "Array of intersected scroll zones.",
                "type": "Object[]"
            },
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 566,
            "description": "Fires a `drag` event and, if necessary, a `dragover` event.",
            "itemtype": "method",
            "name": "_fireDrag",
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 591,
            "description": "Fires a `dragenter` event for the specified dropzone node.",
            "itemtype": "method",
            "name": "_fireDragEnter",
            "params": [
                {
                    "name": "dropNode",
                    "description": "Dropzone node that was entered.",
                    "type": "Node"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 613,
            "description": "Fires a `dragleave` event.",
            "itemtype": "method",
            "name": "_fireDragLeave",
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 634,
            "description": "Fires a `dragstart` event, but only if `this._dragState.pending` is `true`.",
            "itemtype": "method",
            "name": "_fireDragStart",
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 657,
            "description": "Returns a bounding rect for _el_ with absolute coordinates corrected for\nviewport scroll offsets.\n\nThe native `getBoundingClientRect()` returns coordinates for an element's\nposition relative to the top left of the viewport, so if the viewport has\nbeen scrolled, its coordinates will be different.\n\nThis method returns an element's absolute rect, which will be the same\nregardless of whether the viewport has been scrolled.",
            "itemtype": "method",
            "name": "_getAbsoluteBoundingRect",
            "params": [
                {
                    "name": "el",
                    "description": "HTML element.",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "Absolute bounding rect for _el_.",
                "type": "Object"
            },
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 688,
            "description": "Returns a bounding rect for _el_, normalizing for older versions of IE that\ndon't provide height and width information in native bounding rects.",
            "itemtype": "method",
            "name": "_getBoundingRect",
            "params": [
                {
                    "name": "el",
                    "description": "HTML element.",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "Bounding rect for _el_.",
                "type": "Object"
            },
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 711,
            "description": "Returns the XY delta between where the pointer was at the start of the\ncurrent drag operation and where the pointer is now.",
            "itemtype": "method",
            "name": "_getDelta",
            "return": {
                "description": "Array containing the X and Y deltas.",
                "type": "Number[]"
            },
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 728,
            "description": "Returns the current X and Y scroll offsets of the viewport.",
            "itemtype": "method",
            "name": "_getViewportScrollOffsets",
            "return": {
                "description": "Array containing the X and Y scroll offsets of the\n    viewport.",
                "type": "Number[]"
            },
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 749,
            "description": "Moves the dragged node or its proxy to the current pointer location, but\nconstrained within the container if the pointer is outside the container.",
            "itemtype": "method",
            "name": "_moveDragNode",
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 794,
            "description": "Prevents the WebKit long-touch callout menu from appearing on the current\ndragNode, if any.",
            "itemtype": "method",
            "name": "_preventTouchCallout",
            "access": "protected",
            "tagname": "",
            "see": [
                "_restoreTouchCallout"
            ],
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 814,
            "description": "Returns the proxy node associated with the current drag operation, or the\noriginal dragged node if node proxy node is set.",
            "itemtype": "method",
            "name": "_proxyOrDragNode",
            "return": {
                "description": "Proxy node or original dragged node.",
                "type": "Node"
            },
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 826,
            "description": "Utility method for lazily publishing and firing events.",
            "itemtype": "method",
            "name": "_publishAndFire",
            "params": [
                {
                    "name": "name",
                    "description": "Event name to fire.",
                    "type": "String"
                },
                {
                    "name": "facade",
                    "description": "Event facade.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "Event options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "silent",
                            "description": "Whether the default handler\n        should be executed directly without actually firing the event.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 854,
            "description": "Detaches and reattaches event handlers.\n\nThis is necessary after the `container`, `dragSelector`, or `dropSelector`\nattributes are changed.",
            "itemtype": "method",
            "name": "_reinitialize",
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 869,
            "description": "Restores the original value of the current dragNode's `webkitTouchCallout`\nstyle before it was prevented by `_preventTouchCallout()`.",
            "itemtype": "method",
            "name": "_restoreTouchCallout",
            "access": "protected",
            "tagname": "",
            "see": [
                "_preventTouchCallout"
            ],
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 889,
            "description": "Begins scrolling all currently intersected scroll zones in whichever\ndirection(s) they need to be scrolled.\n\nScrolling will continue (and will accelerate in speed) until the\n`_scrollIntersections` property is empty.",
            "itemtype": "method",
            "name": "_scroll",
            "params": [
                {
                    "name": "amount",
                    "description": "Number of pixels to scroll. Scrolling will\n    automatically accelerate as long as the pointer remains within a scroll\n    margin.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 960,
            "description": "Default handler for the `drag` event.",
            "itemtype": "method",
            "name": "_defDragFn",
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1008,
            "description": "Default handler for the `dragenter` event.",
            "itemtype": "method",
            "name": "_defDragEnterFn",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1022,
            "description": "Default handler for the `dragstart` event.",
            "itemtype": "method",
            "name": "_defDragStartFn",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1057,
            "description": "Handles native `scroll` events on the container if the container isn't the\nbody. This is necessary in order to update bounding client rects when\nscrollable containers are scrolled.",
            "itemtype": "method",
            "name": "_onContainerScroll",
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1078,
            "description": "Handler for the `gesturemove` event.",
            "itemtype": "method",
            "name": "_onDocMove",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1123,
            "description": "Handler for the `gesturemoveend` event.",
            "itemtype": "method",
            "name": "_onDocMoveEnd",
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1172,
            "description": "Handler for the `gesturemovestart` event.",
            "itemtype": "method",
            "name": "_onDraggableMoveStart",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1217,
            "description": "Handles native `dragstart` events on draggable nodes.\n\nThe default behavior of these events must be prevented in order to avoid\nconflicts.",
            "itemtype": "method",
            "name": "_onNativeDragStart",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1231,
            "description": "Called when the `dragenter` event's default handler is prevented.\n\nThis will prevent the entered node from being considered a valid dropzone.",
            "itemtype": "method",
            "name": "_preventedDragEnterFn",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1244,
            "description": "Called when the `dragstart` event's default handler is prevented.\n\nThis will cancel the drag operation.",
            "itemtype": "method",
            "name": "_preventedDragStartFn",
            "access": "protected",
            "tagname": "",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1257,
            "description": "Container node to which drag operations should be constrained. All\ndraggable nodes and dropzones must be descendants of this container, and\ndraggable nodes will not be draggable or droppable outside its borders.\n\nIf not specified, the `<body>` element will be used as the container.",
            "itemtype": "attribute",
            "name": "container",
            "type": "HTMLElement|Node|String",
            "default": "'body'",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1275,
            "description": "Distance in pixels that the mouse cursor must move after a mousedown\nbefore the movement will be considered the beginning of a drag event.\n\nThis value has no effect on touch-based interactions (see\n`touchCancelDistance`).",
            "itemtype": "attribute",
            "name": "distanceThreshold",
            "type": "Number",
            "default": "10",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1289,
            "description": "CSS selector that matches one or more nodes within a draggable node that\nshould be treated as drag handles for that node.\n\nIf a `dragHandleSelector` is set, nodes matched by `dragSelector` will\nonly be draggable by their handles.",
            "itemtype": "attribute",
            "name": "dragHandleSelector",
            "type": "String",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1300,
            "description": "CSS selector that matches one or more nodes within the `container` that\nshould be draggable.",
            "itemtype": "attribute",
            "name": "dragSelector",
            "type": "String",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1308,
            "description": "CSS selector that matches one or more nodes within the `container` that\nshould be considered drop zones.",
            "itemtype": "attribute",
            "name": "dropSelector",
            "type": "String",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1316,
            "description": "Whether or not to enable dragging in response to touch events. There are\ncurrently some edge cases with this, which is why it might make sense to\ndisable it in certain situations.",
            "itemtype": "attribute",
            "name": "enableTouchDrag",
            "type": "Boolean",
            "default": "true",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1328,
            "description": "Array of custom X and Y pixel offset values specifying how the dragged\nnode or proxy node should be positioned relative to the pointer\nposition, or the string \"auto\" for an automatic offset based on the\ninitial grab point.\n\nYou can override the pointer offset specified here on a per-drag basis\nby setting a `pointerOffset` property on the event facade passed to the\n\"on\" phase of the `dragstart` event.",
            "itemtype": "attribute",
            "name": "pointerOffset",
            "type": "Number[]|String",
            "default": "'auto'",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1345,
            "description": "Whether or not to automatically scroll the container if necessary when\nthe pointer approaches an edge during a drag operation.\n\nIf it's necessary to auto-scroll nodes other than the container, select\nthose nodes using the `scrollSelector` attribute.",
            "itemtype": "attribute",
            "name": "scrollContainer",
            "type": "Boolean",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1358,
            "description": "Distance in pixels from the edge of a scrollable node at which the\npointer will cause the node to begin scrolling during a drag operation.\n\nThe smaller this number is, the closer the pointer will have to be to\nthe edge before the node will start to scroll.",
            "itemtype": "attribute",
            "name": "scrollMargin",
            "type": "Number",
            "default": "50",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1372,
            "description": "CSS selector that matches scrollable nodes within the `container` that\nshould be automatically scrolled when the pointer is dragged near the\nnode's edges.",
            "itemtype": "attribute",
            "name": "scrollSelector",
            "type": "String",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1381,
            "description": "Amount of time in milliseconds that must pass after a mousedown or tap\nwithout a corresponding mouseup or release before we'll consider the\naction the beginning of a drag event.\n\nFor mouse-based interactions, exceeding this threshold will cause a\ndrag event to start even if the `distanceThreshold` is not met.\n\nThis attribute has no effect on touch-based interactions (see\n`touchDelay`).",
            "itemtype": "attribute",
            "name": "timeThreshold",
            "type": "Number",
            "default": "800",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1399,
            "description": "Maximum distance in pixels from the original touch point that the\npointer may move during the `touchDelay` time before a pending drag is\ncanceled.\n\nThis helps avoid triggering unintended drag interactions when the user\nis actually scrolling or performing some other touch gesture.\n\nThis attribute has no effect on mouse-based interactions.",
            "itemtype": "attribute",
            "name": "touchCancelDistance",
            "type": "Number",
            "default": "10",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-dragdrop/js/dragdrop.js",
            "line": 1416,
            "description": "Delay in milliseconds after an initial touch before a drag interaction\nbegins when using a touch-based input device.\n\nIf the touch ends before this delay is over, or if the touch point moves\nby more than `touchCancelDistance` pixels before this delay is over, the\npending drag is canceled.\n\nThis attribute has no effect on mouse-based interactions.",
            "itemtype": "attribute",
            "name": "touchDelay",
            "type": "Number",
            "default": "1000",
            "class": "DragDrop",
            "module": "gallery-sm-dragdrop"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-dom.js",
            "line": 20,
            "description": "Copies styles from a node to another node",
            "params": [
                {
                    "name": "from",
                    "description": "",
                    "type": "HTMLElement|Node"
                },
                {
                    "name": "to",
                    "description": "",
                    "type": "HTMLElement|Node"
                },
                {
                    "name": "styles",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "explicit",
                            "description": "When set to `true` copy only\n        explicitly set properties from the source node. IOW, don't use\n        computedStyle.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "overwrite",
                            "description": "When set to `true`\n        properties from the source node will overwrite the same property\n        set on the destination node.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "class": "Editor.DOM",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-dom"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-dom.js",
            "line": 57,
            "description": "Finds the nearest ancestor element node.",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "tagName",
                    "description": "Optional tagName or function. If a tagName\n  is provided, the nearest ancestor with that tag will be returned. If a\n  function is provided, it will be used for the comparision. It will receive\n  a node as its only argument and should return a boolean. If nothing is\n  provided, the nearest ancestor element node will be returned",
                    "type": "Function|String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Node"
            },
            "static": 1,
            "class": "Editor.DOM",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-dom"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-dom.js",
            "line": 88,
            "description": "Walks the ancestor tree of a given node until a node that has\nthe css property set is found",
            "itemtype": "method",
            "name": "getStyledAncestor",
            "params": [
                {
                    "name": "startNode",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "property",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "self",
                    "description": "Whether or not to include `startNode` in the scan",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "The node having `property` set, or null if no node was found",
                "type": "Node"
            },
            "static": 1,
            "class": "Editor.DOM",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-dom"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-dom.js",
            "line": 113,
            "description": "Returns true if the given node is a container element, false otherwise\nA container element is defined as a non-inline element",
            "itemtype": "method",
            "name": "isContainer",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "HTMLNode|Node"
                }
            ],
            "return": {
                "description": "true if the given node is a container element, false otherwise",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Editor.DOM",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-dom"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-dom.js",
            "line": 131,
            "description": "Returns true if the given node is an element node, false otherwise",
            "itemtype": "method",
            "name": "isElementNode",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "HTMLNode|Node"
                }
            ],
            "return": {
                "description": "true if the given node is an element node, false otherwise",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Editor.DOM",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-dom"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-dom.js",
            "line": 146,
            "description": "Returns true if the given node is empty\n\nNodes containing only returns, tabs or linefeeds are considered empty\nNodes containing only whitespace are not considered empty",
            "itemtype": "method",
            "name": "isEmptyNode",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "HTMLNode|Node"
                }
            ],
            "return": {
                "description": "true if the given node is a empty, false otherwise",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Editor.DOM",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-dom"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-dom.js",
            "line": 166,
            "description": "Returns true if the given node is an inline element node, false otherwise",
            "itemtype": "method",
            "name": "isInlineElement",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "HTMLNode|Node"
                }
            ],
            "return": {
                "description": "true if the given node is an inline element node, false otherwise",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Editor.DOM",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-dom"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-dom.js",
            "line": 181,
            "description": "Returns true if the given node is a text node, false otherwise",
            "itemtype": "method",
            "name": "isTextNode",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "HTMLNode|Node"
                }
            ],
            "return": {
                "description": "true if the given node is a text node, false otherwise",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Editor.DOM",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-dom"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-dom.js",
            "line": 196,
            "description": "Returns the maximum offset of a given node as determined by the type of node.\n\nElement nodes will return the number of childNodes\nText nodes will return the length of the text",
            "itemtype": "method",
            "name": "maxOffset",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "HTMLNode|Node"
                }
            ],
            "return": {
                "description": "Number of child nodes or length of text",
                "type": "Number"
            },
            "static": 1,
            "class": "Editor.DOM",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-dom"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-dom.js",
            "line": 214,
            "description": "Replace spaces in text with a replacement string.\n\nPrimarily to workaround a webkit issue where it won't put the caret after\ntrailing whitespace at the end of a node",
            "params": [
                {
                    "name": "text",
                    "description": "The source text that will have spaces replaced",
                    "type": "String"
                },
                {
                    "name": "replacement",
                    "description": "The string to use as the replacement for\n    spaces in _text_. Defaults to a nonblank space",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\\u00a0"
                }
            ],
            "return": {
                "description": "_text_ with spaces replaced",
                "type": "String"
            },
            "class": "Editor.DOM",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-dom"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-dom.js",
            "line": 232,
            "description": "Splits the given node at the specified offset",
            "itemtype": "method",
            "name": "split",
            "params": [
                {
                    "name": "node",
                    "description": "The node to split",
                    "type": "Node"
                },
                {
                    "name": "offset",
                    "description": "Position to split the node.\n    For text nodes this is numerical offset, for element nodes can be a\n    a number referencing a childNode of `node` or a childNode reference.",
                    "type": "Number|Node"
                }
            ],
            "return": {
                "description": "Node reference to the node created after splitting. It will\n    be the nextSibling of `node`. If offset is not valid, the original `node`\n    is returned.",
                "type": "Node"
            },
            "class": "Editor.DOM",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-dom"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-dom.js",
            "line": 271,
            "description": "Unwraps a node",
            "itemtype": "method",
            "name": "unwrap",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Node"
                }
            ],
            "return": {
                "description": "Range containing the unwrapped child nodes",
                "type": "Range"
            },
            "static": 1,
            "class": "Editor.DOM",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-dom"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-keys.js",
            "line": 23,
            "description": "Hash of keyCode values that should be ignored when processing keyboard\nevents.\n\nThis is used to avoid double-handling of modifier keys, since other event\nproperties are used to detect whether modifier keys are pressed.",
            "itemtype": "property",
            "name": "ignoreKeyCodes",
            "type": "Object",
            "class": "Editor.Keys",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-keys"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-keys.js",
            "line": 41,
            "description": "Mapping of keyCode values to friendly names for special keys.",
            "itemtype": "property",
            "name": "keyCodeMap",
            "type": "Object",
            "class": "Editor.Keys",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-keys"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-keys.js",
            "line": 72,
            "description": "Mapping of shortcut keys to function handlers.",
            "itemtype": "property",
            "name": "keyCommands",
            "type": "Object",
            "class": "Editor.Keys",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-keys"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-keys.js",
            "line": 103,
            "description": "Attaches keyboard events.",
            "itemtype": "method",
            "name": "_attachKeyEvents",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Keys",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-keys"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-keys.js",
            "line": 121,
            "description": "Detaches keyboard events.",
            "itemtype": "method",
            "name": "_detachKeyEvents",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Keys",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-keys"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-keys.js",
            "line": 136,
            "description": "Handles `keydown` events on this editor.",
            "itemtype": "method",
            "name": "_onKeyDown",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Editor.Keys",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-keys"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-link.js",
            "line": 25,
            "description": "Key commands related to creating hyperlinks.",
            "itemtype": "property",
            "name": "linkKeyCommands",
            "type": "Object",
            "class": "Editor.Link",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-link"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-link.js",
            "line": 35,
            "description": "HTML Template for building an anchor node",
            "itemtype": "property",
            "name": "linkTemplate",
            "type": "Object",
            "class": "Editor.Link",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-link"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-link.js",
            "line": 54,
            "description": "Wraps the currently selected range in an anchor element",
            "itemtype": "method",
            "name": "link",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "href",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "",
                            "type": "String",
                            "optional": true,
                            "optdefault": "_self"
                        },
                        {
                            "name": "text",
                            "description": "",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Editor.Link",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-link"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-link.js",
            "line": 69,
            "description": "Returns whether or not the current range is entirely in an anchor element",
            "itemtype": "method",
            "name": "isLink",
            "return": {
                "description": "`true` if the range is contained in an anchor element,\n  `false` otherwise",
                "type": "Boolean"
            },
            "class": "Editor.Link",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-link"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-link.js",
            "line": 81,
            "description": "Removes link by replacing the anchor element with the child nodes\nof the anchor\n\nThe anchor element will be removed from the DOM and destroyed.",
            "itemtype": "method",
            "name": "unlink",
            "chainable": 1,
            "class": "Editor.Link",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-link"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-link.js",
            "line": 106,
            "description": "Returns the nearest ancestor anchor that entirely contains\nthe current range",
            "itemtype": "method",
            "name": "_getAnchorNode",
            "return": {
                "description": "The containing anchor element",
                "type": "Node"
            },
            "access": "protected",
            "tagname": "",
            "class": "Editor.Link",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-link"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-link.js",
            "line": 123,
            "description": "Implementation for the public `link` method.\n\nWraps the currently selected range in an anchor `<a>` tag",
            "itemtype": "method",
            "name": "_link",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "href",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "",
                            "type": "String",
                            "optional": true,
                            "optdefault": "_self"
                        },
                        {
                            "name": "text",
                            "description": "",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Editor.Link",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-link"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-link.js",
            "line": 178,
            "itemtype": "method",
            "name": "_linkPrompt",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Link",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-link"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-queue.js",
            "line": 26,
            "description": "Key commands related to queue functionality.",
            "itemtype": "property",
            "name": "queueKeyCommands",
            "type": "Object",
            "class": "Editor.Queue",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-queue"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-queue.js",
            "line": 50,
            "description": "Hash of commands queued for execution on the next keypress.\n\nWorkaround for webkit bug where it wont place a caret in an empty node\nor between nodes.",
            "itemtype": "property",
            "name": "_commandQueue",
            "type": "Object",
            "class": "Editor.Queue",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-queue"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-queue.js",
            "line": 78,
            "description": "Attaches queue events.",
            "itemtype": "method",
            "name": "_attachQueueEvents",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Queue",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-queue"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-queue.js",
            "line": 99,
            "description": "Clears the command queue",
            "itemtype": "method",
            "name": "_clearCommandQueue",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Queue",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-queue"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-queue.js",
            "line": 110,
            "description": "Detaches queue events.",
            "itemtype": "method",
            "name": "_detachQueueEvents",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Queue",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-queue"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-queue.js",
            "line": 124,
            "description": "Executes all commands on the command queue",
            "itemtype": "method",
            "name": "_flushCommandQueue",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Queue",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-queue"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-queue.js",
            "line": 144,
            "description": "Adds a command to the queue",
            "itemtype": "method",
            "name": "_queueCommand",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Queue",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-queue"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-queue.js",
            "line": 163,
            "description": "Handles `keypress` events on the editor",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Editor.Queue",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-queue"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-queue.js",
            "line": 194,
            "description": "Wrapper for `Editor.Base#_execCommand()`.",
            "itemtype": "method",
            "name": "_queueBeforeExecCommand",
            "params": [
                {
                    "name": "name",
                    "description": "Command name.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Command value.",
                    "type": "Boolean|String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Editor.Queue",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-queue"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-queue.js",
            "line": 212,
            "description": "Wrapper for `Editor.Base#_queryCommandValue()`.",
            "itemtype": "method",
            "name": "_queueBeforeQueryCommandValue",
            "params": [
                {
                    "name": "name",
                    "description": "Command name.",
                    "type": "String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Editor.Queue",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-queue"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-style.js",
            "line": 29,
            "description": "Hash of style commands supported by this editor.\n\nNames should correspond with valid `execCommand()` command names. Values\nare properties in the following format:",
            "itemtype": "property",
            "name": "styleCommands",
            "type": "Object",
            "class": "Editor.Style",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-style",
            "subprops": [
                {
                    "name": "property",
                    "description": "The name of the CSS property in camelCase form",
                    "type": "String"
                },
                {
                    "name": "valueOn",
                    "description": "The `on` value of the property. eg. `bold`",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "valueOff",
                    "description": "The `off` value of the property. eg. `none`",
                    "type": "String",
                    "optional": true
                }
            ]
        },
        {
            "file": "src/sm-editor/js/extensions/editor-style.js",
            "line": 68,
            "description": "Key commands related to style functionality.",
            "itemtype": "property",
            "name": "styleKeyCommands",
            "type": "Object",
            "class": "Editor.Style",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-style"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-style.js",
            "line": 93,
            "description": "Bolds or unbolds the current selection.",
            "itemtype": "method",
            "name": "bold",
            "chainable": 1,
            "class": "Editor.Style",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-style"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-style.js",
            "line": 104,
            "description": "Italicizes or unitalicizes the current selection.",
            "itemtype": "method",
            "name": "italic",
            "chainable": 1,
            "class": "Editor.Style",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-style"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-style.js",
            "line": 115,
            "description": "Gets and/or sets the values of multiple editor style commands.\n\nWhen called without an argument, the current values of all supported style\ncommands will be returned. When called with a _styles_ object, the specified\nstyle commands will be set to their given values, and the resulting new\nvalues will be returned.",
            "itemtype": "method",
            "name": "styles",
            "params": [
                {
                    "name": "styles",
                    "description": "Hash of style names and values to set.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Hash of style names and values that were set, or all styles\n    if no _styles_ parameter was specified.",
                "type": "Object"
            },
            "class": "Editor.Style",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-style"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-style.js",
            "line": 151,
            "description": "Toggles underline on the current selection.",
            "itemtype": "method",
            "name": "underline",
            "chainable": 1,
            "class": "Editor.Style",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-style"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-style.js",
            "line": 165,
            "description": "Duckpunch Editor.Base._execCommand to build css styled nodes instead of\nrelying on spotty browser compatibility of `styleWithCSS`\n\nPasses through to Editor.Base for any commands not defined\nin `this.styleCommands`",
            "itemtype": "method",
            "name": "_execCommand",
            "params": [
                {
                    "name": "name",
                    "description": "Command name.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Command value.",
                    "type": "Boolean|String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Editor.Style",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-style"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-style.js",
            "line": 222,
            "description": "Reformats html to the proper style\n\n<span>blah blah</span>",
            "params": [
                {
                    "name": "html",
                    "description": "HTML string to format",
                    "type": "HTML"
                }
            ],
            "return": {
                "description": "Node instance containing a document fragment with the\n    formatted _html_",
                "type": "Node"
            },
            "access": "protected",
            "tagname": "",
            "class": "Editor.Style",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-style"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-style.js",
            "line": 288,
            "description": "Getter for the `html` attribute.",
            "itemtype": "method",
            "name": "_getHTML",
            "params": [
                {
                    "name": "value",
                    "description": "HTML.",
                    "type": "HTML"
                }
            ],
            "return": {
                "description": "HTML.",
                "type": "HTML"
            },
            "access": "protected",
            "tagname": "",
            "class": "Editor.Style",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-style"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-style.js",
            "line": 303,
            "description": "Walks the ancestor tree of a given node until a node that has\nthe css property set is found",
            "itemtype": "method",
            "name": "_getStyledAncestor",
            "params": [
                {
                    "name": "startNode",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "property",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "self",
                    "description": "Whether or not to include `startNode` in the scan",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "The node having `property` set, or null if no node was found",
                "type": "Node"
            },
            "access": "protected",
            "tagname": "",
            "class": "Editor.Style",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-style"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-style.js",
            "line": 328,
            "description": "Parses inline elements from a given range. Partially selected nodes will\nbe split and text nodes will be wrapped in `<span>` tags if necessary.\n\nThe range will not be modified.",
            "itemtype": "method",
            "name": "_getStyleNodes",
            "params": [
                {
                    "name": "range",
                    "description": "",
                    "type": "Range"
                }
            ],
            "return": {
                "description": "NodeList of inline elements within the given `range`",
                "type": "NodeList"
            },
            "access": "protected",
            "tagname": "",
            "class": "Editor.Style",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-style"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-style.js",
            "line": 378,
            "description": "Setter for the `html` attribute.",
            "itemtype": "method",
            "name": "_setHTML",
            "params": [
                {
                    "name": "value",
                    "description": "HTML.",
                    "type": "HTML"
                }
            ],
            "return": {
                "description": "HTML.",
                "type": "HTML"
            },
            "access": "protected",
            "tagname": "",
            "class": "Editor.Style",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-style"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-style.js",
            "line": 393,
            "description": "Splits the node at the end of the selection",
            "itemtype": "method",
            "name": "_splitAfterRange",
            "params": [
                {
                    "name": "range",
                    "description": "",
                    "type": "Range"
                },
                {
                    "name": "contents",
                    "description": "Contents\n    to be inserted after the split",
                    "type": "HTMLCollection|HTMLElement|Node|NodeList|String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Node reference of the node created after splitting. Any\n    _contents_ will have been inserted as previous siblings of this node.",
                "type": "Node"
            },
            "class": "Editor.Style",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-style"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-style.js",
            "line": 431,
            "description": "Duckpunch Editor.Base _queryCommandValue to query the css properties of nodes\ninstead of relying on spotty browser compatibility of `styleWithCSS`\n\nPasses through to Editor.Base for any commands not defined\nin `this.styleCommands`",
            "itemtype": "method",
            "name": "_queryCommandValue",
            "params": [
                {
                    "name": "name",
                    "description": "Command name.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Command value.",
                "type": "Boolean|String"
            },
            "access": "protected",
            "tagname": "",
            "class": "Editor.Style",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-style"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-style.js",
            "line": 486,
            "description": "Handles `delete` events on the editor",
            "itemtype": "method",
            "name": "_afterDelete",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Style",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-style"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-style.js",
            "line": 498,
            "description": "Handles `paste` events on the editor.",
            "itemtype": "method",
            "name": "_onPaste",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Editor.Style",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-style"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-style.js",
            "line": 530,
            "description": "Function for formatting editor html\n\nOne day allow custom formatting. Today is not that day.",
            "class": "Editor.Style",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-style"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-undo.js",
            "line": 25,
            "description": "Key commands related to undo/redo functionality.",
            "itemtype": "property",
            "name": "undoKeyCommands",
            "type": "Object",
            "class": "Editor.Undo",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-undo"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-undo.js",
            "line": 48,
            "description": "Array of redoable changes that have previously been undone.",
            "itemtype": "property",
            "name": "_redoStack",
            "type": "Array",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Undo",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-undo"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-undo.js",
            "line": 55,
            "description": "Array of undoable changes that have been made to this editor.",
            "itemtype": "property",
            "name": "_undoStack",
            "type": "Array",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Undo",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-undo"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-undo.js",
            "line": 86,
            "description": "Redoes the last change that was undone in this editor.",
            "itemtype": "method",
            "name": "redo",
            "chainable": 1,
            "class": "Editor.Undo",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-undo"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-undo.js",
            "line": 123,
            "description": "Undoes the last change made in this editor.",
            "itemtype": "method",
            "name": "undo",
            "chainable": 1,
            "class": "Editor.Undo",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-undo"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-undo.js",
            "line": 162,
            "description": "Adds an entry to the undo stack representing the current state of the\neditor.",
            "itemtype": "method",
            "name": "_addUndo",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Undo",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-undo"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-undo.js",
            "line": 192,
            "description": "Adds an entry to the redo stack representing the current state of the\neditor.",
            "itemtype": "method",
            "name": "_addRedo",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Undo",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-undo"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-undo.js",
            "line": 222,
            "description": "Attaches undo events.",
            "itemtype": "method",
            "name": "_attachUndoEvents",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Undo",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-undo"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-undo.js",
            "line": 238,
            "description": "Wrapper for `Editor.Base#_execCommand()`.",
            "itemtype": "method",
            "name": "_beforeExecCommand",
            "params": [
                {
                    "name": "name",
                    "description": "Command name.",
                    "type": "String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Editor.Undo",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-undo"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-undo.js",
            "line": 251,
            "description": "Detaches undo events.",
            "itemtype": "method",
            "name": "_detachUndoEvents",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Undo",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-undo"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-undo.js",
            "line": 266,
            "description": "Handles editor `render` events.",
            "itemtype": "method",
            "name": "_afterRender",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Undo",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-undo"
        },
        {
            "file": "src/sm-editor/js/extensions/editor-undo.js",
            "line": 277,
            "description": "Number of undo/redo levels to maintain. Lowering this number may reduce\nmemory usage, especially when editing very large documents.",
            "itemtype": "attribute",
            "name": "undoLevels",
            "type": "Number",
            "default": "20",
            "class": "Editor.Undo",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-undo"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 24,
            "description": "Fired after this editor loses focus.",
            "itemtype": "event",
            "name": "blur",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 31,
            "description": "Fired after this editor receives focus.",
            "itemtype": "event",
            "name": "focus",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 38,
            "description": "Fired after this editor is rendered.",
            "itemtype": "event",
            "name": "render",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 45,
            "description": "Fired when this editor's selection changes.",
            "itemtype": "event",
            "name": "selectionChange",
            "params": [
                {
                    "name": "prevRange",
                    "description": "Range that was previously selected, or `null` if there\n    was no previous selection.",
                    "type": "Range"
                },
                {
                    "name": "range",
                    "description": "Range that's now selected, or `null` if the current\n    selection is empty or outside the editor.",
                    "type": "Range"
                },
                {
                    "name": "selection",
                    "description": "Reference to this editor's Selection instance.",
                    "type": "Selection"
                }
            ],
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 60,
            "description": "CSS class names used by this editor.",
            "itemtype": "property",
            "name": "classNames",
            "type": "Object",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base",
            "subprops": [
                {
                    "name": "cursor",
                    "description": "Class name used for a placeholder node that\n    represents the cursor position.",
                    "type": "String"
                },
                {
                    "name": "editor",
                    "description": "Class name used for the editor's container.",
                    "type": "String"
                },
                {
                    "name": "input",
                    "description": "Class name used for the WYSIWYG YUI Editor frame that\n    will receive user input.",
                    "type": "String"
                }
            ]
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 76,
            "description": "`Y.Selection` instance representing the current document selection.\n\nThe selection object's state always reflects the current selection, so it\nwill update when the selection changes. If you need to retain the state of a\npast selection, hold onto a Range instance representing that selection.\n\nAlso, beware: this selection object reflects the current selection in the\nentire browser document, not just within this editor.",
            "itemtype": "property",
            "name": "selection",
            "type": "Selection",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 89,
            "description": "Hash of boolean commands supported by this editor. A boolean command is\none that does not require a value. Executing this command will toggle\nthe currently set value.\n\nNames should correspond with valid `execCommand()` command names.",
            "itemtype": "property",
            "name": "boolCommands",
            "type": "Object",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 133,
            "description": "Removes focus from this editor.",
            "itemtype": "method",
            "name": "blur",
            "chainable": 1,
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 147,
            "description": "Gets and/or sets the value of the specified editor command.\n\nSee <https://developer.mozilla.org/en-US/docs/Rich-Text_Editing_in_Mozilla>\nfor a list of possible commands.",
            "itemtype": "method",
            "name": "command",
            "params": [
                {
                    "name": "name",
                    "description": "Command name or function to execute. By\n    default functions will execute in the editor context. Use Y.bind\n    to provide a different execution context.",
                    "type": "String|Function"
                },
                {
                    "name": "value*",
                    "description": "Command value or 0..n arguments to pass\n    to the command function. Use the special value 'toggle' to toggle a\n    boolean command (like 'bold') to the opposite of its current state.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Value of the specified command or return value of the\n    supplied function.",
                "type": "*"
            },
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 186,
            "description": "Decreases the font size of the current selection (if possible).",
            "itemtype": "method",
            "name": "decreaseFontSize",
            "chainable": 1,
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 202,
            "description": "Focuses this editor.",
            "itemtype": "method",
            "name": "focus",
            "chainable": 1,
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 216,
            "description": "Increases the font size of the current selection (if possible).",
            "itemtype": "method",
            "name": "increaseFontSize",
            "chainable": 1,
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 234,
            "description": "Inserts the specified _html_ at the current selection point, deleting the\ncurrent selection if there is one.",
            "itemtype": "method",
            "name": "insertHTML",
            "params": [
                {
                    "name": "html",
                    "description": "HTML to insert, in the form of an HTML\n    string, HTMLElement, or Node instance.",
                    "type": "HTML|HTMLElement|Node"
                }
            ],
            "return": {
                "description": "Node instance representing the inserted HTML.",
                "type": "Node"
            },
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 260,
            "description": "Inserts the specified plain _text_ at the current selection point, deleting\nthe current selection if there is one.",
            "itemtype": "method",
            "name": "insertText",
            "params": [
                {
                    "name": "text",
                    "description": "Text to insert.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Node instance representing the inserted text node.",
                "type": "Node"
            },
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 272,
            "description": "Renders this editor into its container and appends the container to the\ndocument if necessary.",
            "itemtype": "method",
            "name": "render",
            "chainable": 1,
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 313,
            "description": "Attaches editor events.",
            "itemtype": "method",
            "name": "_attachEvents",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 337,
            "description": "Detaches editor events.",
            "itemtype": "method",
            "name": "_detachEvents",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 350,
            "description": "Wrapper for native the native `execCommand()` that verifies that the command\nis valid in the current state and normalizes boolean/toggleable values.",
            "itemtype": "method",
            "name": "_execCommand",
            "params": [
                {
                    "name": "name",
                    "description": "Command name.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Command value.",
                    "type": "Boolean|String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 377,
            "description": "Getter for the `html` attribute.",
            "itemtype": "method",
            "name": "_getHTML",
            "params": [
                {
                    "name": "value",
                    "description": "Internal value.",
                    "type": "HTML"
                }
            ],
            "return": {
                "description": "HTML.",
                "type": "HTML"
            },
            "access": "protected",
            "tagname": "",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 389,
            "description": "Getter for the `text` attribute.",
            "itemtype": "method",
            "name": "_getText",
            "params": [
                {
                    "name": "value",
                    "description": "Internal value.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Text.",
                "type": "String"
            },
            "access": "protected",
            "tagname": "",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 401,
            "description": "Inserts a `<span>` at the current selection point containing a preformatted\ntab character.",
            "itemtype": "method",
            "name": "_insertTab",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 412,
            "description": "Wrapper for the native `queryCommandState()` and `queryCommandValue()`\nmethods that uses the appropriate method for the given command type.",
            "itemtype": "method",
            "name": "_queryCommandValue",
            "params": [
                {
                    "name": "name",
                    "description": "Command name.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Command value.",
                "type": "Boolean|String"
            },
            "access": "protected",
            "tagname": "",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 426,
            "description": "Setter for the `html` attribute.",
            "itemtype": "method",
            "name": "_setHTML",
            "params": [
                {
                    "name": "value",
                    "description": "HTML.",
                    "type": "HTML"
                }
            ],
            "return": {
                "description": "HTML.",
                "type": "HTML"
            },
            "access": "protected",
            "tagname": "",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 442,
            "description": "Setter for the `text` attribute.",
            "itemtype": "method",
            "name": "_setText",
            "params": [
                {
                    "name": "value",
                    "description": "Text.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Text.",
                "type": "String"
            },
            "access": "protected",
            "tagname": "",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 458,
            "description": "Refreshes the editor's internal knowledge of the current document selection\nstate and fires a `selectionChange` event if the selection has changed since\nit was last refreshed.",
            "itemtype": "method",
            "name": "_updateSelection",
            "params": [
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "force",
                            "description": "If `true`, the internal selection\n        state will be updated regardless of if the selection changed.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "silent",
                            "description": "If `true`, the `selectionChange`\n        event will be suppressed.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 503,
            "description": "Handles `blur` events on the editor.",
            "itemtype": "method",
            "name": "_onBlur",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 519,
            "description": "Handles `copy` events on the editor.",
            "itemtype": "method",
            "name": "_onCopy",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 542,
            "description": "Handles `cut` events on the editor.",
            "itemtype": "method",
            "name": "_onCut",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 570,
            "description": "Handles `dblclick` events on the editor.",
            "itemtype": "method",
            "name": "_onDblClick",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 582,
            "description": "Handles `focus` events on the editor.",
            "itemtype": "method",
            "name": "_onFocus",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 611,
            "description": "Handles `paste` events on the editor.",
            "itemtype": "method",
            "name": "_onPaste",
            "access": "protected",
            "tagname": "",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 622,
            "description": "HTML content of this editor.",
            "itemtype": "attribute",
            "name": "html",
            "type": "HTML",
            "default": "''",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 634,
            "description": "Form field name to use for the hidden `<textarea>` that contains the raw\noutput of the editor in the configured output format. This name will\nonly be used if the output node doesn't already have a name when the\neditor is rendered.\n\nYou may need to customize this if you plan to use the editor in a form\nthat will be submitted to a server.",
            "itemtype": "attribute",
            "name": "outputName",
            "type": "String",
            "default": "'editor'",
            "initonly": "",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-editor/js/editor-base.js",
            "line": 652,
            "description": "Text content of this editor, with no HTML.",
            "itemtype": "attribute",
            "name": "text",
            "type": "String",
            "default": "''",
            "class": "Editor.Base",
            "module": "gallery-sm-editor",
            "submodule": "gallery-sm-editor-base"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 73,
            "description": "Mapping of key codes to friendly key names that can be used in the `keys`\nattribute and the `preventDefaultMap` property.",
            "itemtype": "property",
            "name": "keyCodeMap",
            "type": "Object",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 91,
            "description": "Mapping of keys whose default actions should be prevented when they trigger\na FocusManager action.",
            "itemtype": "property",
            "name": "preventDefaultMap",
            "type": "Object",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 123,
            "description": "Focuses and returns the nearest ancestor item that contains the current\n`activeItem`, if any.",
            "itemtype": "method",
            "name": "ascend",
            "return": {
                "description": "Focused node, or `null` if there is no ancestor item.",
                "type": "Node|null"
            },
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 149,
            "description": "Focuses and returns the first descendant item within the current\n`activeItem`, if any. In order for this to have any effect, a\n`containerSelector` must be set.",
            "itemtype": "method",
            "name": "descend",
            "return": {
                "description": "Focused node, or `null` if there is no descendant item.",
                "type": "Node|null"
            },
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 170,
            "description": "Focuses and returns the first focusable item.",
            "itemtype": "method",
            "name": "first",
            "params": [
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "container",
                            "description": "Descendant container to restrict the\n        search to. Defaults to the host node.",
                            "type": "Node",
                            "optional": true
                        },
                        {
                            "name": "silent",
                            "description": "If `true`, the item will be\n        returned, but will not become the active item.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "Focused node, or `null` if there are no focusable items.",
                "type": "Node|null"
            },
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 201,
            "description": "Focuses and returns the last focusable item.",
            "itemtype": "method",
            "name": "last",
            "params": [
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "container",
                            "description": "Descendant container to restrict the\n        search to. Defaults to the host node.",
                            "type": "Node",
                            "optional": true
                        },
                        {
                            "name": "silent",
                            "description": "If `true`, the item will be\n        returned, but will not become the active item.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "Focused node, or `null` if there are no focusable items.",
                "type": "Node|null"
            },
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 231,
            "description": "Focuses and returns the next focusable sibling of the current `activeItem`.\n\nIf there is no focusable next sibling and the `circular` attribute is\n`false`, the current `activeItem` will be returned.",
            "itemtype": "method",
            "name": "next",
            "params": [
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "silent",
                            "description": "If `true`, the item will be\n        returned, but will not become the active item.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "Focused node, or `null` if there is no `activeItem`.",
                "type": "Node|null"
            },
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 279,
            "description": "Focuses and returns the previous focusable sibling of the current\n`activeItem`.\n\nIf there is no focusable previous sibling and the `circular` attribute is\n`false`, the current `activeItem` will be returned.",
            "itemtype": "method",
            "name": "previous",
            "params": [
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "silent",
                            "description": "If `true`, the item will be\n        returned, but will not become the active item.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "Focused node, or `null` if there is no `activeItem`.",
                "type": "Node|null"
            },
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 328,
            "description": "Refreshes the `tabIndex` state of this FocusManager's items to ensure that\nitems are focusable but only the currently active item is in the tab flow.\n\nCall this method after adding, disabling, or enabling elements to ensure\nthat they're managed correctly.",
            "itemtype": "method",
            "name": "refresh",
            "params": [
                {
                    "name": "container",
                    "description": "If specified, only items that are direct\n    descendants of this container will be refreshed.",
                    "type": "Node",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 358,
            "description": "Attaches event handlers.",
            "itemtype": "method",
            "name": "_attachEvents",
            "access": "protected",
            "tagname": "",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 378,
            "description": "Detaches event handlers.",
            "itemtype": "method",
            "name": "_detachEvents",
            "access": "protected",
            "tagname": "",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 388,
            "description": "Returns the container node for the current `activeItem`.",
            "itemtype": "method",
            "name": "_getActiveContainer",
            "return": {
                "description": "Container node for the current `activeItem`.",
                "type": "Node"
            },
            "access": "protected",
            "tagname": "",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 418,
            "description": "Getter for the `anchoredContainerSelector` attribute.",
            "itemtype": "method",
            "name": "_getAnchoredContainerSelector",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String|null"
                }
            ],
            "return": {
                "description": "",
                "type": "String|null"
            },
            "access": "protected",
            "tagname": "",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 440,
            "description": "Getter for the `anchoredItemSelector` attribute.",
            "itemtype": "method",
            "name": "_getAnchoredItemSelector",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String|null"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "access": "protected",
            "tagname": "",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 458,
            "description": "Handles `activeItemChange` events.",
            "itemtype": "method",
            "name": "_afterActiveItemChange",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 482,
            "description": "Handles `blur` events on the host node.",
            "itemtype": "method",
            "name": "_afterBlur",
            "access": "protected",
            "tagname": "",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 492,
            "description": "Handles `focus` events on the host node.",
            "itemtype": "method",
            "name": "_afterFocus",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 509,
            "description": "Handles `keydown` events on the host node.",
            "itemtype": "method",
            "name": "_onKeyDown",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 542,
            "description": "Node that's currently either focused or focusable as part of the\ndocument's tab flow.",
            "itemtype": "attribute",
            "name": "activeItem",
            "type": "Node|null",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 557,
            "description": "Anchored version of `containerSelector`.\n\nFor example, if `containerSelector` is set to \"ul\", then\n`anchoredContainerSelector` will default to \">ul\". You can override the\ndefault by specifying your own anchored selector if desired.",
            "itemtype": "attribute",
            "name": "anchoredContainerSelector",
            "type": "String|null",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 570,
            "description": "Anchored version of `itemSelector`.\n\nFor example, if `itemSelector` is set to \"li\", then\n`anchoredItemSelector` will default to \">li\". You can override the\ndefault by specifying your own anchored selector if desired.",
            "itemtype": "attribute",
            "name": "anchoredItemSelector",
            "type": "String|null",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 583,
            "description": "If `true`, focus will wrap around to the first or last item in the\ncurrent container when the selection moves past the end or beginning of\nthe focusable items, respectively.",
            "itemtype": "attribute",
            "name": "circular",
            "type": "Boolean",
            "default": "true",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 595,
            "description": "Non-anchored CSS selector that matches a hierarchical descendant\ncontainer into which focus can descend.\n\nFor example, if the host node is a `<ul>` and item nodes are `<li>`s,\nsetting `containerSelector` to \"ul\" would allow the user to descend into\na nested `<ul>` contained inside an `<li>`.\n\nTo prevent hierarchical selection, set `containerSelector` to `null`\n(the default).",
            "itemtype": "attribute",
            "name": "containerSelector",
            "type": "String|null",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 610,
            "description": "Non-anchored CSS selector that matches nodes that should be considered\ndisabled. Disabled nodes will not be considered focusable.\n\nBy default, a node is considered disabled if it has a `disabled`\nattribute or an `aria-disabled` or `aria-hidden` attribute set to\n\"true\".",
            "itemtype": "attribute",
            "name": "disabledSelector",
            "type": "String|null",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 624,
            "description": "`true` if the host node or one of its focusable items is currently\nfocused, `false` otherwise.",
            "itemtype": "attribute",
            "name": "focused",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 637,
            "description": "Non-anchored CSS selector that matches item nodes that should be\nfocusable.",
            "itemtype": "attribute",
            "name": "itemSelector",
            "type": "String",
            "default": "'*'",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-focusmanager/js/focusmanager.js",
            "line": 648,
            "description": "Mapping of keyboard codes to functions or function names that should\nexecute when those keys are pressed.\n\nBy default, the following keys are mapped:\n\n* down arrow: `next()`\n* left arrow: `ascend()`\n* right arrow: `descend()`\n* up arrow: `previous()`\n\nTo customize the mapping, either modify or replace the `keys` object.\n\nValues should be functions or strings representing named functions on\nthis FocusManager instance. All functions will be executed with this\nFocusManager as the `this` object.\n\nProperties should be numerical key codes or one of the following\nstrings representing a key on the keyboard:\n\n* down\n* end\n* home\n* left\n* pgdown\n* pgup\n* right\n* space\n* up",
            "itemtype": "attribute",
            "name": "keys",
            "type": "Object",
            "class": "Plugin.FocusManager",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-indexed-map/js/indexed-map.js",
            "line": 17,
            "description": "Returns the numerical index of the entry with the given _key_, or `-1` if\nnot found.\n\nThis is a very efficient operation with string keys, but is slower with\nnon-string keys.",
            "itemtype": "method",
            "name": "indexOfKey",
            "params": [
                {
                    "name": "key",
                    "description": "Key to look up.",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "Index of the entry with the given _key_, or `-1` if not\n    found.",
                "type": "Number"
            },
            "class": "Map",
            "module": "gallery-sm-focusmanager"
        },
        {
            "file": "src/sm-map/js/map.js",
            "line": 62,
            "description": "The number of entries in this map.",
            "itemtype": "property",
            "name": "size",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Map",
            "module": "gallery-sm-map"
        },
        {
            "file": "src/sm-map/js/map.js",
            "line": 72,
            "description": "Deletes all entries from this map.",
            "itemtype": "method",
            "name": "clear",
            "chainable": 1,
            "class": "Map",
            "module": "gallery-sm-map"
        },
        {
            "file": "src/sm-map/js/map.js",
            "line": 90,
            "description": "Executes the given _callback_ function on each entry in this map.",
            "itemtype": "method",
            "name": "each",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback function.",
                    "type": "Function",
                    "props": [
                        {
                            "name": "value",
                            "description": "Value being iterated.",
                            "type": "Mixed"
                        },
                        {
                            "name": "key",
                            "description": "Key being iterated.",
                            "type": "Mixed"
                        },
                        {
                            "name": "map",
                            "description": "Reference to this map.",
                            "type": "Map"
                        }
                    ]
                },
                {
                    "name": "thisObj",
                    "description": "`this` object to use when calling _callback_.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "see": [
                "forEach"
            ],
            "class": "Map",
            "module": "gallery-sm-map"
        },
        {
            "file": "src/sm-map/js/map.js",
            "line": 117,
            "description": "Returns an array of all the entries in this map. Each entry is an array with\ntwo items, the first being a key and the second a value associated with that\nkey.",
            "itemtype": "method",
            "name": "entries",
            "return": {
                "description": "Array of entries.",
                "type": "Array"
            },
            "class": "Map",
            "module": "gallery-sm-map"
        },
        {
            "file": "src/sm-map/js/map.js",
            "line": 135,
            "description": "Returns the value associated with the given _key_, or _default_ if the key\nisn't found.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "key",
                    "description": "Key to look up.",
                    "type": "Mixed"
                },
                {
                    "name": "defaultValue",
                    "description": "Default value to return if _key_ isn't found.",
                    "type": "Mixed",
                    "optional": true
                }
            ],
            "return": {
                "description": "Value associated with the given _key_, or _default_ if the\n    key isn't found.",
                "type": "Mixed"
            },
            "class": "Map",
            "module": "gallery-sm-map"
        },
        {
            "file": "src/sm-map/js/map.js",
            "line": 150,
            "description": "Returns `true` if _key_ exists in this map, `false` otherwise.",
            "itemtype": "method",
            "name": "has",
            "params": [
                {
                    "name": "key",
                    "description": "Key to look up.",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "`true` if _key_ exists in this map, `false` otherwise.",
                "type": "Boolean"
            },
            "class": "Map",
            "module": "gallery-sm-map"
        },
        {
            "file": "src/sm-map/js/map.js",
            "line": 161,
            "description": "Returns an array of all the keys in this map.",
            "itemtype": "method",
            "name": "keys",
            "return": {
                "description": "Array of keys.",
                "type": "Array"
            },
            "class": "Map",
            "module": "gallery-sm-map"
        },
        {
            "file": "src/sm-map/js/map.js",
            "line": 171,
            "description": "Deletes the entry with the given _key_.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "key",
                    "description": "Key to delete.",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "`true` if the key existed and was deleted, `false`\n    otherwise.",
                "type": "Boolean"
            },
            "class": "Map",
            "module": "gallery-sm-map"
        },
        {
            "file": "src/sm-map/js/map.js",
            "line": 200,
            "description": "Sets the value of the entry with the given _key_. If the key already exists,\nits value will be overwritten; otherwise it will be created.\n\nThe _key_ may be any JavaScript value (including both primitives and\nobjects), but string keys will allow fast lookups, whereas non-string keys\nwill result in slower lookups.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "key",
                    "description": "Key to set.",
                    "type": "Mixed"
                },
                {
                    "name": "value",
                    "description": "Value to set.",
                    "type": "Mixed"
                }
            ],
            "chainable": 1,
            "class": "Map",
            "module": "gallery-sm-map"
        },
        {
            "file": "src/sm-map/js/map.js",
            "line": 234,
            "description": "Returns an array of all the values in this map.",
            "itemtype": "method",
            "name": "values",
            "return": {
                "description": "Array of values.",
                "type": "Array"
            },
            "class": "Map",
            "module": "gallery-sm-map"
        },
        {
            "file": "src/sm-map/js/map.js",
            "line": 246,
            "description": "Returns the numerical index of the entry with the given _key_, or `-1` if\nnot found.\n\nThis is a very efficient operation with string keys, but is slower with\nnon-string keys.",
            "itemtype": "method",
            "name": "_indexOfKey",
            "params": [
                {
                    "name": "key",
                    "description": "Key to look up.",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "Index of the entry with the given _key_, or `-1` if not\n    found.",
                "type": "Number"
            },
            "access": "protected",
            "tagname": "",
            "class": "Map",
            "module": "gallery-sm-map"
        },
        {
            "file": "src/sm-map/js/map.js",
            "line": 282,
            "description": "Returns `true` if the two given values are the same value, `false`\notherwise.\n\nThis is an implementation of the ES5/6 SameValue comparison algorithm, which\nis more correct than `===` in that it considers `NaN` to be the same as\n`NaN`, and does not consider `0` to be the same as `-0`.\n\nThis method is an alias for `Object.is()` if available, or a fallback\nimplementation if not.",
            "itemtype": "method",
            "name": "_is",
            "params": [
                {
                    "name": "a",
                    "description": "First value to compare.",
                    "type": "Mixed"
                },
                {
                    "name": "b",
                    "description": "Second value to compare.",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "`true` if _a_ and _b_ are the same value, `false`\n    otherwise.",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "class": "Map",
            "module": "gallery-sm-map"
        },
        {
            "file": "src/sm-map/js/map.js",
            "line": 311,
            "description": "Alias for `remove()`.",
            "itemtype": "method",
            "name": "delete",
            "see": [
                "remove"
            ],
            "class": "Map",
            "module": "gallery-sm-map"
        },
        {
            "file": "src/sm-map/js/map.js",
            "line": 319,
            "description": "Alias for `each()`.",
            "itemtype": "method",
            "name": "forEach",
            "see": [
                "each"
            ],
            "class": "Map",
            "module": "gallery-sm-map"
        },
        {
            "file": "src/sm-map/js/map.js",
            "line": 327,
            "description": "Returns a JSON-serializable representation of this map.\n\nThis is effectively an alias for `entries()`, but could be overridden to\nreturn a customized representation.",
            "itemtype": "method",
            "name": "toJSON",
            "return": {
                "description": "JSON-serializable array of entries in this map.",
                "type": "Array"
            },
            "class": "Map",
            "module": "gallery-sm-map"
        },
        {
            "file": "src/sm-menu/js/plugins/menu-plugin.js",
            "line": 51,
            "description": "Repositions this menu so that it is anchored to a specified node, region, or\nset of pixel coordinates.\n\nThe menu will be displayed at the most advantageous position relative to the\nanchor point to ensure that as much of the menu as possible is visible\nwithin the viewport.\n\nIf no anchor point is specified, the menu will be positioned relative to its\nhost node.",
            "itemtype": "method",
            "name": "reposition",
            "params": [
                {
                    "name": "anchorPoint",
                    "description": "Anchor point at which this menu\n    should be positioned. The point may be specified as a `Y.Node`\n    reference, a region object, or an array of X and Y pixel coordinates.",
                    "type": "Node|Number[]|Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "Plugin.Menu",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-plugin"
        },
        {
            "file": "src/sm-menu/js/plugins/menu-plugin.js",
            "line": 100,
            "description": "Returns an efficient test function that can be passed to `Y.Node#ancestor()`\nto test whether a node is this menu's container or its plugin host.\n\nThis is broken out to make overriding easier in subclasses.",
            "itemtype": "method",
            "name": "_getAncestorTestFn",
            "return": {
                "description": "Test function.",
                "type": "Function"
            },
            "access": "protected",
            "tagname": "",
            "class": "Plugin.Menu",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-plugin"
        },
        {
            "file": "src/sm-menu/js/plugins/menu-plugin.js",
            "line": 173,
            "description": "If `true`, this menu will be shown when the host node is clicked with\nthe left mouse button or (in the case of `<button>`, `<input>`, and\n`<a>` elements) activated with the Return key.",
            "itemtype": "attribute",
            "name": "showOnClick",
            "type": "Boolean",
            "default": "true",
            "initonly": "",
            "class": "Plugin.Menu",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-plugin"
        },
        {
            "file": "src/sm-menu/js/plugins/menu-plugin.js",
            "line": 187,
            "description": "If `true`, this menu will be shown when the host node's `contextmenu`\nevent occurs, which happens when the user takes an action that would\nnormally display the browser's context menu (such as right-clicking).\n\nWhen `true`, the browser's default context menu will be prevented from\nappearing.",
            "itemtype": "attribute",
            "name": "showOnContext",
            "type": "Boolean",
            "default": "false",
            "initonly": "",
            "class": "Plugin.Menu",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-plugin"
        },
        {
            "file": "src/sm-menu/js/plugins/menu-plugin.js",
            "line": 204,
            "description": "If `true`, this menu will be shown when the host node is hovered or\nreceives focus instead of only being shown when it's clicked.",
            "itemtype": "attribute",
            "name": "showOnHover",
            "type": "Boolean",
            "default": "false",
            "initonly": "",
            "class": "Plugin.Menu",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-plugin"
        },
        {
            "file": "src/sm-menu/js/menu-base.js",
            "line": 21,
            "description": "Fired when a menu item is disabled.",
            "itemtype": "event",
            "name": "disable",
            "params": [
                {
                    "name": "item",
                    "description": "Menu item that was disabled.",
                    "type": "Menu.Item"
                }
            ],
            "preventable": "_defDisableFn",
            "class": "Menu.Base",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-base"
        },
        {
            "file": "src/sm-menu/js/menu-base.js",
            "line": 30,
            "description": "Fired when a menu item is enabled.",
            "itemtype": "event",
            "name": "enable",
            "params": [
                {
                    "name": "item",
                    "description": "Menu item that was enabled.",
                    "type": "Menu.Item"
                }
            ],
            "preventable": "_defEnableFn",
            "class": "Menu.Base",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-base"
        },
        {
            "file": "src/sm-menu/js/menu-base.js",
            "line": 39,
            "description": "Fired when a menu item is hidden.",
            "itemtype": "event",
            "name": "hide",
            "params": [
                {
                    "name": "item",
                    "description": "Menu item that was hidden.",
                    "type": "Menu.Item"
                }
            ],
            "preventable": "_defHideFn",
            "class": "Menu.Base",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-base"
        },
        {
            "file": "src/sm-menu/js/menu-base.js",
            "line": 48,
            "description": "Fired when a menu item is shown.",
            "itemtype": "event",
            "name": "show",
            "params": [
                {
                    "name": "item",
                    "description": "Menu item that was shown.",
                    "type": "Menu.Item"
                }
            ],
            "preventable": "_defShowFn",
            "class": "Menu.Base",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-base"
        },
        {
            "file": "src/sm-menu/js/menu-base.js",
            "line": 69,
            "description": "Closes all open submenus of this menu.",
            "itemtype": "method",
            "name": "closeSubMenus",
            "chainable": 1,
            "class": "Menu.Base",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-base"
        },
        {
            "file": "src/sm-menu/js/menu-base.js",
            "line": 84,
            "description": "Disables the specified menu item.",
            "itemtype": "method",
            "name": "disableItem",
            "params": [
                {
                    "name": "item",
                    "description": "Menu item to disable.",
                    "type": "Menu.Item"
                },
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "silent",
                            "description": "If `true`, the `disable` event\n        will be suppressed.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Menu.Base",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-base"
        },
        {
            "file": "src/sm-menu/js/menu-base.js",
            "line": 105,
            "description": "Enables the specified menu item.",
            "itemtype": "method",
            "name": "enableItem",
            "params": [
                {
                    "name": "item",
                    "description": "Menu item to enable.",
                    "type": "Menu.Item"
                },
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "silent",
                            "description": "If `true`, the `enable` event\n        will be suppressed.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Menu.Base",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-base"
        },
        {
            "file": "src/sm-menu/js/menu-base.js",
            "line": 126,
            "description": "Hides the specified menu item.",
            "itemtype": "method",
            "name": "hideItem",
            "params": [
                {
                    "name": "item",
                    "description": "Menu item to hide.",
                    "type": "Menu.Item"
                },
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "silent",
                            "description": "If `true`, the `hide` event\n        will be suppressed.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Menu.Base",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-base"
        },
        {
            "file": "src/sm-menu/js/menu-base.js",
            "line": 147,
            "description": "Shows the specified menu item.",
            "itemtype": "method",
            "name": "showItem",
            "params": [
                {
                    "name": "item",
                    "description": "Menu item to show.",
                    "type": "Menu.Item"
                },
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "silent",
                            "description": "If `true`, the `show` event\n        will be suppressed.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Menu.Base",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-base"
        },
        {
            "file": "src/sm-menu/js/menu-base.js",
            "line": 170,
            "description": "Default handler for the `disable` event.",
            "itemtype": "method",
            "name": "_defDisableFn",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu.Base",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-base"
        },
        {
            "file": "src/sm-menu/js/menu-base.js",
            "line": 181,
            "description": "Default handler for the `enable` event.",
            "itemtype": "method",
            "name": "_defEnableFn",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu.Base",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-base"
        },
        {
            "file": "src/sm-menu/js/menu-base.js",
            "line": 192,
            "description": "Default handler for the `hide` event.",
            "itemtype": "method",
            "name": "_defHideFn",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu.Base",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-base"
        },
        {
            "file": "src/sm-menu/js/menu-base.js",
            "line": 203,
            "description": "Default handler for the `show` event.",
            "itemtype": "method",
            "name": "_defShowFn",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu.Base",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-base"
        },
        {
            "file": "src/sm-menu/js/menu-item.js",
            "line": 49,
            "description": "Disables this menu item. Disabled items are not clickable or selectable.",
            "itemtype": "method",
            "name": "disable",
            "params": [
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "silent",
                            "description": "If `true`, the `disable` event\n        will be suppressed.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Menu.Item",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-item"
        },
        {
            "file": "src/sm-menu/js/menu-item.js",
            "line": 63,
            "description": "Enables this menu item.",
            "itemtype": "method",
            "name": "enable",
            "params": [
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "silent",
                            "description": "If `true`, the `enable` event\n        will be suppressed.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Menu.Item",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-item"
        },
        {
            "file": "src/sm-menu/js/menu-item.js",
            "line": 77,
            "description": "Hides this menu item.",
            "itemtype": "method",
            "name": "hide",
            "params": [
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "silent",
                            "description": "If `true`, the `hide` event\n        will be suppressed.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Menu.Item",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-item"
        },
        {
            "file": "src/sm-menu/js/menu-item.js",
            "line": 91,
            "description": "Returns `true` if this menu item or one of its ancestors is currently\ndisabled.",
            "itemtype": "method",
            "name": "isDisabled",
            "return": {
                "description": "`true` if this menu item or one of its ancestors is\n    currently disabled, `false` otherwise.",
                "type": "Boolean"
            },
            "class": "Menu.Item",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-item"
        },
        {
            "file": "src/sm-menu/js/menu-item.js",
            "line": 104,
            "description": "Returns `true` if this menu item or one of its ancestors is currently\nhidden.",
            "itemtype": "method",
            "name": "isHidden",
            "return": {
                "description": "`true` if this menu item or one of its ancestors is\n    currently hidden, `false` otherwise.",
                "type": "Boolean"
            },
            "class": "Menu.Item",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-item"
        },
        {
            "file": "src/sm-menu/js/menu-item.js",
            "line": 117,
            "description": "Shows this menu item.",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "silent",
                            "description": "If `true`, the `show` event\n        will be suppressed.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Menu.Item",
            "module": "gallery-sm-menu",
            "submodule": "gallery-sm-menu-item"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 27,
            "description": "Fired when any clickable menu item is clicked.\n\nYou can subscribe to clicks on a specific menu item by subscribing to\n\"itemClick#id\", where \"id\" is the item id of the item you want to subscribe to.",
            "itemtype": "event",
            "name": "itemClick",
            "params": [
                {
                    "name": "item",
                    "description": "Menu item that was clicked.",
                    "type": "Menu.Item"
                },
                {
                    "name": "originEvent",
                    "description": "Original click event.",
                    "type": "EventFacade"
                }
            ],
            "preventable": "_defItemClickFn",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 42,
            "description": "CSS class names used by this menu.",
            "itemtype": "property",
            "name": "classNames",
            "type": "Object",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 66,
            "description": "Whether or not this menu has been rendered.",
            "itemtype": "property",
            "name": "rendered",
            "type": "Boolean",
            "default": "false",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 74,
            "description": "Selectors to use when parsing a menu structure from a DOM structure via\n`parseHTML()`.",
            "itemtype": "property",
            "name": "sourceSelectors",
            "type": "Object",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 118,
            "description": "Returns the HTML node (as a `Y.Node` instance) associated with the specified\nmenu item, if any.",
            "itemtype": "method",
            "name": "getHTMLNode",
            "params": [
                {
                    "name": "item",
                    "description": "Menu item.",
                    "type": "Menu.Item"
                }
            ],
            "return": {
                "description": "`Y.Node` instance associated with the given tree node, or\n    `undefined` if one was not found.",
                "type": "Node"
            },
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 135,
            "description": "Hides this menu.",
            "itemtype": "method",
            "name": "hide",
            "chainable": 1,
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 146,
            "description": "Parses the specified HTML _sourceNode_ as a menu structure and returns an\narray of menu item objects that can be used to generate a menu with that\nstructure.\n\nBy default, _sourceNode_ is expected to contain one `<li>` element per\nmenu item, and submenus are expected to be represented by `<ul>` or `<ol>`\nelements.\n\nThe selector queries used to parse the menu structure are contained in the\n`sourceSelectors` property, and may be customized. Class names specified in\nthe `classNames` property are used to determine whether a menu item should\nbe disabled, hidden, or treated as a heading or separator.",
            "itemtype": "method",
            "name": "parseHTML",
            "params": [
                {
                    "name": "sourceNode",
                    "description": "Node instance, HTML element, or\n    selector string for the node (usually a `<ul> or `<ol>` element) to\n    parse.",
                    "type": "HTMLElement|Node|String"
                }
            ],
            "return": {
                "description": "Array of menu item objects.",
                "type": "Object[]"
            },
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 229,
            "description": "Renders this menu into its container.\n\nIf the container hasn't already been added to the current document, it will\nbe appended to the `<body>` element.",
            "itemtype": "method",
            "name": "render",
            "chainable": 1,
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 265,
            "description": "Renders the children of the specified menu item.\n\nIf a container is specified, it will be assumed to be an existing rendered\nmenu item, and the children will be rendered (or re-rendered) inside it.",
            "itemtype": "method",
            "name": "renderChildren",
            "params": [
                {
                    "name": "menuItem",
                    "description": "Menu item whose children should be rendered.",
                    "type": "Menu.Item"
                },
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "container",
                            "description": "`Y.Node` instance of a container into\n        which the children should be rendered. If the container already\n        contains rendered children, they will be re-rendered in place.",
                            "type": "Node",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "`Y.Node` instance containing the rendered children.",
                "type": "Node"
            },
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 316,
            "description": "Renders the specified menu item and its children (if any).\n\nIf a container is specified, the rendered node will be appended to it.",
            "itemtype": "method",
            "name": "renderNode",
            "params": [
                {
                    "name": "menuItem",
                    "description": "Tree node to render.",
                    "type": "Menu.Item"
                },
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "container",
                            "description": "`Y.Node` instance of a container to\n        which the rendered tree node should be appended.",
                            "type": "Node",
                            "optional": true
                        },
                        {
                            "name": "renderChildren",
                            "description": "Whether or not to render\n        this node's children.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "`Y.Node` instance of the rendered menu item.",
                "type": "Node"
            },
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 401,
            "description": "Repositions this menu so that it is anchored to a specified node, region, or\nset of pixel coordinates.\n\nThe menu will be displayed at the most advantageous position relative to the\nanchor point to ensure that as much of the menu as possible is visible\nwithin the viewport.",
            "itemtype": "method",
            "name": "reposition",
            "params": [
                {
                    "name": "anchorPoint",
                    "description": "Anchor point at which this menu\n    should be positioned. The point may be specified as a `Y.Node`\n    reference, a region object, or an array of X and Y pixel coordinates.",
                    "type": "Node|Number[]|Object"
                }
            ],
            "chainable": 1,
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 443,
            "description": "Shows this menu.\n\nThe menu will be rendered if it hasn't been rendered already.",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "anchorPoint",
                            "description": "Anchor point at\n        which this menu should be positioned when shown. The point may be\n        specified as a `Y.Node` reference, a region object, or an array of X\n        and Y pixel coordinates.",
                            "type": "Node|Number[]|Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 469,
            "description": "Toggles the visibility of this menu, showing it if it's currently hidden or\nhiding it if it's currently visible.",
            "itemtype": "method",
            "name": "toggleVisible",
            "params": [
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "anchorPoint",
                            "description": "Anchor point at\n        which this menu should be positioned when shown. The point may be\n        specified as a `Y.Node` reference, a region object, or an array of X\n        and Y pixel coordinates.",
                            "type": "Node|Number[]|Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 487,
            "description": "Attaches menu events.",
            "itemtype": "method",
            "name": "_attachMenuEvents",
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 523,
            "description": "Detaches menu events.",
            "itemtype": "method",
            "name": "_detachMenuEvents",
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 533,
            "description": "Returns an efficient test function that can be passed to `Y.Node#ancestor()`\nto test whether a node is this menu's container.\n\nThis is broken out to make overriding easier in subclasses.",
            "itemtype": "method",
            "name": "_getAncestorTestFn",
            "return": {
                "description": "Test function.",
                "type": "Function"
            },
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 551,
            "description": "Given an anchor point and the regions currently occupied by a child node\n(the node being anchored) and a parent node (the node being anchored to),\nreturns a region object representing the coordinates the anchored node will\noccupy when anchored to the given point on the parent.\n\nAn anchor point is a string like \"tl-bl\", which means \"anchor the top left\npoint of _nodeRegion_ to the bottom left point of _parentRegion_\".\n\nAny combination of top/bottom/left/right anchor points may be used as long\nas they follow this format. Here are a few examples:\n\n  * `'bl-br'`: Anchor the bottom left of _nodeRegion_ to the bottom right of\n    _parentRegion_.\n  * `'br-bl'`: Anchor the bottom right of _nodeRegion_ to the bottom left of\n    _parentRegion_.\n  * `'tl-tr'`: Anchor the top left of _nodeRegion_ to the top right of\n    _parentRegion_.\n  * `'tr-tl'`: Anchor the top right of _nodeRegion_ to the top left of\n    _parentRegion_.",
            "itemtype": "method",
            "name": "_getAnchorRegion",
            "params": [
                {
                    "name": "anchor",
                    "description": "Anchor point. See above for details.",
                    "type": "String"
                },
                {
                    "name": "nodeRegion",
                    "description": "Region object for the node to be anchored (that\n    is, the node that will be repositioned).",
                    "type": "Object"
                },
                {
                    "name": "parentRegion",
                    "description": "Region object for the node that will be\n    anchored to (that is, the node that will not move).",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Region that will be occupied by the anchored node.",
                "type": "Object"
            },
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 648,
            "description": "Hides the specified menu container by moving its htmlNode offscreen.",
            "itemtype": "method",
            "name": "_hideMenu",
            "params": [
                {
                    "name": "item",
                    "description": "Menu item.",
                    "type": "Menu.Item"
                },
                {
                    "name": "htmlNode",
                    "description": "HTML node for the menu item.",
                    "type": "Node",
                    "optional": true
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 665,
            "description": "Returns `true` if the given _inner_ region is contained entirely within the\ngiven _outer_ region. If it's not a perfect fit, returns a numerical score\nindicating how much of the _inner_ region fits within the _outer_ region.\nA higher score indicates a better fit.",
            "itemtype": "method",
            "name": "_inRegion",
            "params": [
                {
                    "name": "inner",
                    "description": "Inner region.",
                    "type": "Object"
                },
                {
                    "name": "outer",
                    "description": "Outer region.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "`true` if the _inner_ region fits entirely within\n    the _outer_ region or, if not, a numerical score indicating how much of\n    the inner region fits.",
                "type": "Boolean|Number"
            },
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 700,
            "description": "Intelligently positions the _htmlNode_ of the given submenu _item_ relative\nto its parent so that as much as possible of the submenu will be visible\nwithin the viewport.",
            "itemtype": "method",
            "name": "_positionMenu",
            "params": [
                {
                    "name": "item",
                    "description": "Menu item to position.",
                    "type": "Menu.Item"
                },
                {
                    "name": "htmlNode",
                    "description": "HTML node for the menu item.",
                    "type": "Node",
                    "optional": true
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 744,
            "description": "Handles `add` events for this menu.",
            "itemtype": "method",
            "name": "_afterAdd",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 785,
            "description": "Handles `clear` events for this menu.",
            "itemtype": "method",
            "name": "_afterClear",
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 806,
            "description": "Handles `mousedown` events on the document.",
            "itemtype": "method",
            "name": "_afterDocMouseDown",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 827,
            "description": "Handles `close` events for this menu.",
            "itemtype": "method",
            "name": "_afterClose",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 852,
            "description": "Handles `disable` events for this menu.",
            "itemtype": "method",
            "name": "_afterDisable",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 867,
            "description": "Handles `enable` events for this menu.",
            "itemtype": "method",
            "name": "_afterEnable",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 882,
            "description": "Handles `hide` events for this menu.",
            "itemtype": "method",
            "name": "_afterHide",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 898,
            "description": "Handles `open` events for this menu.",
            "itemtype": "method",
            "name": "_afterOpen",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 937,
            "description": "Handles `orientationChange` events for this menu.",
            "itemtype": "method",
            "name": "_afterOrientationChange",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 953,
            "description": "Handles `remove` events for this menu.",
            "itemtype": "method",
            "name": "_afterRemove",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 975,
            "description": "Handles `show` events for this menu.",
            "itemtype": "method",
            "name": "_afterShow",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 991,
            "description": "Handles `visibleChange` events for this menu.",
            "itemtype": "method",
            "name": "_afterVisibleChange",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 1011,
            "description": "Handles click events on menu items.",
            "itemtype": "method",
            "name": "_onItemClick",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 1051,
            "description": "Handles delegated `mouseenter` events on menu items.",
            "itemtype": "method",
            "name": "_onItemMouseEnter",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 1072,
            "description": "Handles delegated `mouseleave` events on menu items.",
            "itemtype": "method",
            "name": "_onItemMouseLeave",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 1093,
            "description": "Handles `mouseenter` events on this menu.",
            "itemtype": "method",
            "name": "_onMenuMouseEnter",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 1104,
            "description": "Handles `mouseleave` events on this menu.",
            "itemtype": "method",
            "name": "_onMenuMouseLeave",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 1127,
            "description": "Default handler for the generic `itemClick` event.",
            "itemtype": "method",
            "name": "_defItemClickFn",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 1148,
            "description": "Default handler for item-specific `itemClick#<id>` events.",
            "itemtype": "method",
            "name": "_defSpecificItemClickFn",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 1163,
            "description": "Preferred alignment positions at which this menu should be displayed\nrelative to the anchor point when one is provided to the `show()`,\n`toggle()`, or `reposition()` methods.\n\nThe most optimal alignment position will be chosen automatically based\non which one allows the most of this menu to be visible within the\nbrowser's viewport. If multiple positions are equally visible, then the\noptimal position will be chosen based on its order in this array.\n\nAn alignment position is a string like \"tl-bl\", which means \"align the\ntop left of this menu to the bottom left of its anchor point\".\n\nAny combination of top/bottom/left/right alignment positions may be used\nas long as they follow this format. Here are a few examples:\n\n  * `'bl-br'`: Align the bottom left of this menu with the bottom right\n    of the anchor point.\n  * `'br-bl'`: Align the bottom right of this menu with the bottom left\n    of the anchor point.\n  * `'tl-tr'`: Align the top left of this menu with the top right of\n    the anchor point.\n  * `'tr-tl'`: Align the top right of this menu to the top left of this\n    anchor point.",
            "itemtype": "attribute",
            "name": "alignments",
            "type": "String[]",
            "default": "['tl-bl', 'tr-br', 'bl-tl', 'br-tr']",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 1197,
            "description": "If `true`, this menu will be hidden when the user clicks on a menu item\nthat doesn't contain a submenu.",
            "itemtype": "attribute",
            "name": "hideOnClick",
            "type": "Boolean",
            "default": "true",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 1208,
            "description": "If `true`, this menu will be hidden when the user moves the mouse\noutside the menu.",
            "itemtype": "attribute",
            "name": "hideOnMouseLeave",
            "type": "Boolean",
            "default": "false",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 1219,
            "description": "If `true`, this menu will be hidden when the user clicks somewhere\noutside the menu.",
            "itemtype": "attribute",
            "name": "hideOnOutsideClick",
            "type": "Boolean",
            "default": "true",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 1230,
            "description": "Orientation of this menu. May be either `'vertical'` or `'horizontal'`.",
            "itemtype": "attribute",
            "name": "orientation",
            "type": "String",
            "default": "'vertical'",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 1240,
            "description": "Just like `alignments`, but for submenus of this menu. See the\n`alignments` attribute for details on how alignment positions work.",
            "itemtype": "attribute",
            "name": "subMenuAlignments",
            "type": "String[]",
            "default": "['tl-tr', 'bl-br', 'tr-tl', 'br-bl']",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-menu/js/menu.js",
            "line": 1253,
            "description": "Whether or not this menu is visible. Changing this attribute's value\nwill also change the visibility of this menu.",
            "itemtype": "attribute",
            "name": "visible",
            "type": "Boolean",
            "default": "false",
            "class": "Menu",
            "module": "gallery-sm-menu"
        },
        {
            "file": "src/sm-promise-events/js/events.js",
            "line": 24,
            "description": "Decorate a Promise with an `on` method and make its `then` method propagate\nevent support to its generated child promises.",
            "itemtype": "method",
            "name": "decorate",
            "params": [
                {
                    "name": "promise",
                    "description": "the Promise to add event support to",
                    "type": "Promise"
                }
            ],
            "static": 1,
            "class": "Promise.EventNotifier",
            "module": "gallery-sm-promise-events",
            "namespace": "Promise"
        },
        {
            "file": "src/sm-promise-events/js/events.js",
            "line": 68,
            "description": "Decorate a promise and register it and its kin as targets for notifications\nfrom this instance.\n\nReturns the input promise.",
            "itemtype": "method",
            "name": "addEvents",
            "params": [
                {
                    "name": "promise",
                    "description": "The Promise to add event support to",
                    "type": "Promise"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Promise.EventNotifier",
            "module": "gallery-sm-promise-events",
            "namespace": "Promise"
        },
        {
            "file": "src/sm-promise-events/js/events.js",
            "line": 84,
            "description": "Notify registered Promises and their children of an event. Subscription\ncallbacks will be passed additional _args_ parameters.",
            "itemtype": "method",
            "name": "fire",
            "params": [
                {
                    "name": "type",
                    "description": "The name of the event to notify subscribers of",
                    "type": "String"
                },
                {
                    "name": "args*",
                    "description": "Arguments to pass to the callbacks",
                    "type": "Any*",
                    "optional": true
                }
            ],
            "return": {
                "description": "this instance",
                "type": "Promise.EventNotifier"
            },
            "chainable": 1,
            "class": "Promise.EventNotifier",
            "module": "gallery-sm-promise-events",
            "namespace": "Promise"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 42,
            "description": "Returns a new Range object with the same boundary points as this range.\n\nThe returned Range is a copy, not a reference, so modifying it will not\naffect this range (and vice versa).",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "New Range object with the same boundary points as this\n    range.",
                "type": "Range"
            },
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 58,
            "description": "Returns a Node instance containing a document fragment with a copy of this\nrange's contents.\n\nEvent listeners are not copied.\n\nElement ids _are_ copied. This could lead to duplicate ids, so be careful.\n\nPartially selected nodes will include parent tags to ensure that the\nfragment is valid.",
            "itemtype": "method",
            "name": "cloneContents",
            "return": {
                "description": "Node instance containing a document fragment with a copy of\n    this range's contents.",
                "type": "Node"
            },
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 79,
            "description": "Collapses this range by setting the start and end points to the same\nposition, thus resulting in an empty range.",
            "itemtype": "method",
            "name": "collapse",
            "params": [
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "toStart",
                            "description": "If `true`, this range will be\n        collapsed by moving the end point to the start point. Otherwise, the\n        start point will be moved to the end point.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 95,
            "description": "Compares the start or end boundary of this range with the start or end\nboundary of another range.",
            "itemtype": "method",
            "name": "compare",
            "params": [
                {
                    "name": "otherRange",
                    "description": "Range to compare to.",
                    "type": "Range"
                },
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "myPoint",
                            "description": "Specifies which boundary point\n        on this range should be used for the comparison. Valid values are\n        'start' to use this range's start point for the comparison, or 'end'\n        to use this range's end point.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'start'"
                        },
                        {
                            "name": "otherPoint",
                            "description": "Specifies which boundary\n        point on _otherRange_ should be used for the comparison. Valid\n        values are 'start' to use _otherRange_'s start point for the\n        comparison, or 'end' to use _otherRange_'s end point.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'start'"
                        }
                    ]
                }
            ],
            "return": {
                "description": "-1, 0, or 1, indicating whether this range's boundary is\n    respectively before, equal to, or after the other range's boundary.",
                "type": "Number"
            },
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 133,
            "description": "Removes the contents of this range from the DOM.",
            "itemtype": "method",
            "name": "deleteContents",
            "chainable": 1,
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 146,
            "description": "Gets or sets the node that contains the end point of this range.\n\nWhen specifying an _offset_, you may specify either a number or the string\n\"before\" or \"after\".\n\nA numerical offset will position the end point at that offset inside the\n_node_. If _node_ is a text node, the offset will represent a character\nposition. If _node_ can contain child nodes, then the offset will represent\na child index.\n\nThe offset \"before\" will cause the end point to be placed immediately before\n_node_ (not inside it).\n\nThe offset \"after\" will cause the end point to be placed immediately after\n_node_ (not inside it).",
            "itemtype": "method",
            "name": "endNode",
            "params": [
                {
                    "name": "node",
                    "description": "Node to set the end point to. May be\n    specified as a Node instance, HTMLElement, or selector string. If not\n    specified, the current end point will be returned.",
                    "type": "HTMLElement|Node|String",
                    "optional": true
                },
                {
                    "name": "offset",
                    "description": "Offset position of the new end point\n    relative to the _node_. If this is a number, it will be used as an\n    offset position inside _node_. To specify a position immediately before\n    _node_, use the string \"before\". To specify a position immediately after\n    _node_, use the string \"after\".",
                    "type": "Number|String",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "Node that contains the end point of this range.",
                "type": "Node"
            },
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 194,
            "description": "Gets or sets the offset of this selection's end position inside the end\nnode.\n\nIf the end node is a text node, the offset represents a character position.\nIf the end node can contain child nodes, then the offset represents a child\nindex.\n\nWhen setting an offset, you may use a numerical offset (which behaves as\ndescribed above) or the string \"before\" or \"after\".\n\nThe offset \"before\" will cause the end point to be placed immediately before\nthe current end node (not inside it).\n\nThe offset \"after\" will cause the end point to be placed immediately after\nthe current end node (not inside it).\n\nNote that setting a \"before\" or \"after\" offset will change the end node. To\nget the new end node, call `endNode()`.",
            "itemtype": "method",
            "name": "endOffset",
            "params": [
                {
                    "name": "offset",
                    "description": "Offset position of the new end point\n    relative to the current end node. If this is a number, it will be used\n    as an offset position inside the node. To specify a position immediately\n    before the node, use the string \"before\". To specify a position\n    immediately after the node, use the string \"after\".",
                    "type": "Number|String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Offset of this selection's end position inside the end\n    node.",
                "type": "Number"
            },
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 233,
            "description": "Attempts to expand the range to include element nodes while\nstill being equivalent to the current range. Start and End nodes\nare not guaranteed to be element nodes after this method is executed.\n\nExamples:\n\n    [] = startContainer, {} = endContainer, s:e = start/end offset\n\ngiven the HTML\n\n    <div><span>Lorem</span></div>\n\nan initial range of\n\n    <div><span>[{Lorem]}</span></div>  s0:e5\n\nafter expansion would be\n\n    [{<div><span>Lorem</span></div>}]  s0:e1",
            "itemtype": "method",
            "name": "expand",
            "params": [
                {
                    "name": "container",
                    "description": "If provided, do not expand the range\n    past this container",
                    "type": "HTMLElement|Node",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 263,
            "description": "Attempts to expand the range end to include element nodes while\nstill being equivalent to the current range. End node is not\nguaranteed to be an element node after this method is executed.",
            "itemtype": "method",
            "name": "expandEnd",
            "params": [
                {
                    "name": "container",
                    "description": "If provided, do not expand the range\n    past this container",
                    "type": "HTMLElement|Node",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 289,
            "description": "Attempts to expand the range start to include element nodes while\nstill being equivalent to the current range. Start node is not\nguaranteed to be an element node after this method is executed.",
            "itemtype": "method",
            "name": "expandStart",
            "params": [
                {
                    "name": "container",
                    "description": "If provided, do not expand the range\n    past this container",
                    "type": "HTMLElement|Node",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 315,
            "description": "Moves this range's contents into a document fragment and returns a Node\ninstance containing that fragment.\n\nEvent listeners are not retained.\n\nIf this range splits a non-text element, the resulting fragment will include\na clone of that element, including its id (if it has one). This could lead\nto duplicate ids, so be careful.",
            "itemtype": "method",
            "name": "extractContents",
            "return": {
                "description": "Node instance containing a document fragment with this\n    range's contents.",
                "type": "Node"
            },
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 335,
            "description": "Inserts a node at the start of this range.",
            "itemtype": "method",
            "name": "insertNode",
            "params": [
                {
                    "name": "node",
                    "description": "Node instance, HTMLElement, or\n    selector string of a node to insert.",
                    "type": "HTMLElement|Node|String"
                }
            ],
            "return": {
                "description": "Inserted node.",
                "type": "Node"
            },
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 351,
            "description": "Returns `true` if this range is collapsed, `false` otherwise.\n\nA `true` value means that the start and end points are the same and the\nrange is empty, whereas a `false` value means that the start and end points\nare different and the range is not empty.",
            "itemtype": "method",
            "name": "isCollapsed",
            "return": {
                "description": "`true` if this range is collapsed, `false` otherwise.",
                "type": "Boolean"
            },
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 367,
            "description": "Returns `true` if this range has the same boundaries as _otherRange_,\n`false` otherwise.",
            "itemtype": "method",
            "name": "isEquivalent",
            "params": [
                {
                    "name": "otherRange",
                    "description": "Range to compare this range to.",
                    "type": "Range"
                }
            ],
            "return": {
                "description": "`true` if this range has the same boundaries as\n    _otherRange_, `false` otherwise.",
                "type": "Boolean"
            },
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 381,
            "description": "Returns `true` if this range is entirely contained within the given _node_.",
            "itemtype": "method",
            "name": "isInsideNode",
            "params": [
                {
                    "name": "node",
                    "description": "Node instance, HTML element, or\n    selector string of the container.",
                    "type": "HTMLElement|Node|String"
                }
            ],
            "return": {
                "description": "`true` if this range is entirely contained within the\n    given _node_, `false` otherwise.",
                "type": "Boolean"
            },
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 407,
            "description": "Returns the nearest common ancestor node that fully contains all nodes\nwithin this range.",
            "itemtype": "method",
            "name": "parentNode",
            "return": {
                "description": "Nearest common ancestor node that fully contains all nodes\n    within this range.",
                "type": "Node"
            },
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 421,
            "description": "Sets the Range to contain the Node and its contents.\n\nThe parent Node of the start and end of the Range will be the same as the\nparent of the given node.",
            "itemtype": "method",
            "name": "selectNode",
            "params": [
                {
                    "name": "node",
                    "description": "Node or HTMLElement to select",
                    "type": "HTMLElement|Node"
                }
            ],
            "chainable": 1,
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 438,
            "description": "Sets the Range to contain the contents of a Node.\n\nThe parent Node of the start and end of the Range will be the given node.\nThe startOffset is 0, and the endOffset is the number of child Nodes or\nnumber of characters contained in the reference node.",
            "itemtype": "method",
            "name": "selectNodeContents",
            "params": [
                {
                    "name": "node",
                    "description": "Node or HTMLElement to select",
                    "type": "HTMLElement|Node"
                }
            ],
            "chainable": 1,
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 456,
            "description": "Shrinks the start and end containers of the range to just the text nodes\ncontaining the selected text.\n\nUseful for normalizing a range after double clicking to select since the\nrange start/end containers vary by browser as explained below:\n\nChrome and IE use the first text node that contains the selected text\nas the startContainer with an offset to exclude any leading whitespace.\n\nFirefox will use a text node *before* the selected text\nas the startContainer, with a positive offset set to the end\nof the node. If there is no previous sibling of the selected text\nor the previous sibling is not a text node, the behavior is the\nsame as Chrome/IE.\n\nChrome uses the last text node that contains the selected text as the\nendContainer, with an offset to exclude trailing whitespace.\n\nFirefox follows the mostly the same rules for the endContainer\nas it does for the startContainer. Any sibling text node\n*after* the selected text will be used as the endContainer,\nbut with a 0 offset. If there is no next sibling or the next sibling\nis not a text node, the endContainer will be the same as the\nstartContainer, with an offset to exclude any trailing whitespace.\n\nIE will aways use a following text node as the endContainer,\neven if it is a child of a sibling. The offset will *include all*\nleading whitespace. If there is no following text node,\nthe endContainer will be the same as the startContainer, with an\noffset to *include all* trailing whitespace.\n\nExamples:\n    [] = startContainer, {} = endContainer, s:e = start/end offset\n\ngiven the HTML\n    Lorem <b>Ipsum</b> Dolor Sit\n\ndbl clicking to select the text `Lorem`\n    Chrome:  `[{Lorem }]<b>Ipsum</b> Dolor Sit`  s0:e5\n    Firefox: `[{Lorem }]<b>Ipsum</b> Dolor Sit`  s0:e5\n    IE:      `[Lorem ]<b>{Ipsum}</b> Dolor Sit`  s0:e0\n\ndbl clicking to select the text `Ipsum`\n    Chrome:  `Lorem <b>[{Ipsum}]</b> Dolor Sit`  s0:e5\n    Firefox: `[Lorem ]<b>Ipsum</b>{ Dolor Sit}`  s6:e0\n    IE:      `Lorem <b>[Ipsum]</b>{ Dolor Sit}`  s0:e1\n\ndbl clicking to select the text `Dolor`\n    Chrome:  `Lorem <b>Ipsum</b>[{ Dolor Sit}]`  s1:e6\n    Firefox: `Lorem <b>Ipsum</b>[{ Dolor Sit}]`  s1:e6\n    IE:      `Lorem <b>Ipsum</b>[{ Dolor Sit}]`  s1:e7\n\ndbl clicking to select the text `Sit`\n    Chrome:  `Lorem <b>Ipsum</b>[{ Dolor Sit}]`  s7:e10\n    Firefox: `Lorem <b>Ipsum</b>[{ Dolor Sit}]`  s7:e10\n    IE:      `Lorem <b>Ipsum</b>[{ Dolor Sit}]`  s7:e10",
            "itemtype": "method",
            "name": "shrink",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "trim",
                            "description": "If `true` whitespace will be\n    ignored when shrinking the start and end containers. Offsets will\n    be set to exclude any leading whitespace from the startContainer and\n    trailing whitespace from the endContainer.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 526,
            "description": "Shrinks the endContainer of the range to just the text node containing\nthe selected text.\n\nBrowsers are inconsistent in how they define a range, sometimes using\noffsets of sibling or parent nodes instead of the actual text node\ncontaining the selected text.",
            "itemtype": "method",
            "name": "shrinkEnd",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "trim",
                            "description": "If `true` whitespace will be\n    ignored when shrinking the endContainer and an offset will be set to\n    exclude any trailing whitespace from the shrunken endContainer.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 606,
            "description": "Shrinks the startContainer of the range to just the text node containing\nthe selected text.\n\nBrowsers are inconsistent in how they define a range, sometimes using\noffsets of sibling or parent nodes instead of the actual text node\ncontaining the selected text.",
            "itemtype": "method",
            "name": "shrinkStart",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "trim",
                            "description": "If `true` whitespace will be\n    ignored when shrinking the startContainer and an offset will be set to\n    exclude any leading whitespace from the shrunken startContainer.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 687,
            "description": "Gets or sets the node that contains the start point of this range.\n\nWhen specifying an _offset_, you may specify either a number or the string\n\"before\" or \"after\".\n\nA numerical offset will position the start point at that offset inside the\n_node_. If _node_ is a text node, the offset will represent a character\nposition. If _node_ can contain child nodes, then the offset will represent\na child index.\n\nThe offset \"before\" will cause the start point to be placed immediately\nbefore _node_ (not inside it).\n\nThe offset \"after\" will cause the start point to be placed immediately after\n_node_ (not inside it).",
            "itemtype": "method",
            "name": "startNode",
            "params": [
                {
                    "name": "node",
                    "description": "Node to set the start point to. May\n    be specified as a Node instance, HTMLElement, or selector string. If not\n    specified, the current start point will be returned.",
                    "type": "HTMLElement|Node|String",
                    "optional": true
                },
                {
                    "name": "offset",
                    "description": "Offset position of the new start point\n    relative to the _node_. If this is a number, it will be used as an\n    offset position inside _node_. To specify a position immediately before\n    _node_, use the string \"before\". To specify a position immediately after\n    _node_, use the string \"after\".",
                    "type": "Number|String",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "Node that contains the start point of this range.",
                "type": "Node"
            },
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 735,
            "description": "Gets or sets the offset of this range's start position inside the start\nnode.\n\nIf the start node is a text node, the offset represents a character\nposition. If the start node can contain child nodes, then the offset\nrepresents a child index.\n\nWhen setting an offset, you may use a numerical offset (which behaves as\ndescribed above) or the string \"before\" or \"after\".\n\nThe offset \"before\" will cause the start point to be placed immediately\nbefore the current start node (not inside it).\n\nThe offset \"after\" will cause the start point to be placed immediately after\nthe current start node (not inside it).\n\nNote that setting a \"before\" or \"after\" offset will change the start node.\nTo get the new start node, call `startNode()`.",
            "itemtype": "method",
            "name": "startOffset",
            "params": [
                {
                    "name": "offset",
                    "description": "Offset position of the new start point\n    relative to the current start node. If this is a number, it will be used\n    as an offset position inside the node. To specify a position immediately\n    before the node, use the string \"before\". To specify a position\n    immediately after the node, use the string \"after\".",
                    "type": "Number|String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Offset of this range's start position inside the start\n    node.",
                "type": "Number"
            },
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 774,
            "description": "Returns the HTML content of this range.",
            "itemtype": "method",
            "name": "toHTML",
            "return": {
                "description": "HTML content of this range.",
                "type": "HTML"
            },
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 789,
            "description": "Returns the plain text content of this range.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "Plain text content of this range.",
                "type": "String"
            },
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 801,
            "description": "Traverses the contents of the range, passing each node and its children to\nthe supplied callback in document order.\n\nFor example, if the range includes the following HTML...\n\n    lorem ipsum <b>dolor <i>sit</i></b> amet\n\n...then this `traverse()` call...\n\n    range.traverse(function (node) {\n        console.log(Y.Node.getDOMNode(node));\n    });\n\n...would result in the following console output:\n\n    \"lorem ipsum \"\n    <b> element\n    \"dolor \"\n    <i> element\n    \"sit\"\n    \" amet\"\n\nThe entire start and end node will be included even if the range only\nincludes a portion of them. Use the `startOffset()` and `endOffset()`\nmethods to determine where the precise boundaries are if necessary.\n\nReturning `true` from the callback function will stop traversal",
            "itemtype": "method",
            "name": "traverse",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback function.",
                    "type": "Function",
                    "props": [
                        {
                            "name": "node",
                            "description": "Node instance.",
                            "type": "Node"
                        }
                    ]
                },
                {
                    "name": "thisObj",
                    "description": "`this` object to use when calling the callback\n    function.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/range.js",
            "line": 885,
            "description": "Wraps this range in the specified HTML and returns the new wrapper node.",
            "itemtype": "method",
            "name": "wrap",
            "params": [
                {
                    "name": "html",
                    "description": "HTML string.",
                    "type": "HTML"
                },
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "includeWrapper",
                            "description": "If `true`, this range\n        will be updated to include the new wrapper node.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "New wrapper node.",
                "type": "Node"
            },
            "class": "Range",
            "module": "gallery-sm-selection",
            "submodule": "gallery-sm-range"
        },
        {
            "file": "src/sm-selection/js/selection.js",
            "line": 59,
            "description": "Returns the `Range` instance at the specified _index_, or the first range in\nthis selection if no index is specified. If no ranges are selected, returns\n`null`.",
            "itemtype": "method",
            "name": "range",
            "params": [
                {
                    "name": "index",
                    "description": "Range index.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "Range instance at the specified _index_, or the first range\n    in this selection if no index is specified. If no ranges are selected,\n    returns `null`.",
                "type": "Range"
            },
            "class": "Selection",
            "module": "gallery-sm-selection"
        },
        {
            "file": "src/sm-selection/js/selection.js",
            "line": 77,
            "description": "Returns an array containing all the ranges in this selection.",
            "itemtype": "method",
            "name": "ranges",
            "return": {
                "description": "Array containing all the ranges in this selection.",
                "type": "Range[]"
            },
            "class": "Selection",
            "module": "gallery-sm-selection"
        },
        {
            "file": "src/sm-selection/js/selection.js",
            "line": 93,
            "description": "Selects the specified _range_.\n\nBy default, this will result in only this range being selected. If\n`options.multi` is truthy, then the _range_ will be added to the current\nselection without first unselecting any other selected ranges.",
            "itemtype": "method",
            "name": "select",
            "params": [
                {
                    "name": "range",
                    "description": "Range to select.",
                    "type": "Range"
                },
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "multi",
                            "description": "If `true`, the specified _range_\n        will be added to the current list of selected ranges instead of\n        replacing the current selection.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Selection",
            "module": "gallery-sm-selection"
        },
        {
            "file": "src/sm-selection/js/selection.js",
            "line": 119,
            "description": "Removes the specified _range_ from this selection, or unselects all ranges\nif no _range_ is specified.",
            "itemtype": "method",
            "name": "unselect",
            "params": [
                {
                    "name": "range",
                    "description": "Range to unselect.",
                    "type": "Range",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "Selection",
            "module": "gallery-sm-selection"
        },
        {
            "file": "src/sm-selection/js/selection.js",
            "line": 142,
            "description": "Returns a string representation of the combined text content of all the\nranges in this selection.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "String representation of the combined text content of all\n    the ranges in this selection.",
                "type": "String"
            },
            "class": "Selection",
            "module": "gallery-sm-selection"
        },
        {
            "file": "src/sm-treeview/js/extensions/treeview-sortable.js",
            "line": 36,
            "description": "Re-renders a node if necessary after a `sort` event.",
            "itemtype": "method",
            "name": "_afterSort",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "TreeView.Sortable",
            "module": "gallery-sm-treeview",
            "submodule": "gallery-sm-treeview-sortable"
        },
        {
            "file": "src/sm-treeview/js/treeview.js",
            "line": 32,
            "description": "CSS class names used by this treeview.",
            "itemtype": "property",
            "name": "classNames",
            "type": "Object",
            "class": "TreeView",
            "module": "gallery-sm-treeview",
            "subprops": [
                {
                    "name": "canHaveChildren",
                    "description": "Class name indicating that a tree node can\n    contain child nodes (whether or not it actually does).",
                    "type": "String"
                },
                {
                    "name": "children",
                    "description": "Class name for a list of child nodes.",
                    "type": "String"
                },
                {
                    "name": "hasChildren",
                    "description": "Class name indicating that a tree node has one\n    or more child nodes.",
                    "type": "String"
                },
                {
                    "name": "icon",
                    "description": "Class name for a tree node's icon.",
                    "type": "String"
                },
                {
                    "name": "indicator",
                    "description": "Class name for an open/closed indicator.",
                    "type": "String"
                },
                {
                    "name": "label",
                    "description": "Class name for a tree node's user-visible label.",
                    "type": "String"
                },
                {
                    "name": "node",
                    "description": "Class name for a tree node item.",
                    "type": "String"
                },
                {
                    "name": "noTouch",
                    "description": "Class name added to the TreeView container when not\n    using a touchscreen device.",
                    "type": "String"
                },
                {
                    "name": "open",
                    "description": "Class name indicating that a tree node is open.",
                    "type": "String"
                },
                {
                    "name": "row",
                    "description": "Class name for a row container encompassing the\n    indicator and label within a tree node.",
                    "type": "String"
                },
                {
                    "name": "selected",
                    "description": "Class name for a tree node that's selected.",
                    "type": "String"
                },
                {
                    "name": "touch",
                    "description": "Class name added to the TreeView container when using\n    a touchscreen device.",
                    "type": "String"
                },
                {
                    "name": "treeview",
                    "description": "Class name for the TreeView container.",
                    "type": "String"
                }
            ]
        },
        {
            "file": "src/sm-treeview/js/treeview.js",
            "line": 71,
            "description": "Whether or not this TreeView has been rendered.",
            "itemtype": "property",
            "name": "rendered",
            "type": "Boolean",
            "default": "false",
            "class": "TreeView",
            "module": "gallery-sm-treeview"
        },
        {
            "file": "src/sm-treeview/js/treeview.js",
            "line": 79,
            "description": "Default templates used to render this TreeView.",
            "itemtype": "property",
            "name": "templates",
            "type": "Object",
            "class": "TreeView",
            "module": "gallery-sm-treeview"
        },
        {
            "file": "src/sm-treeview/js/treeview.js",
            "line": 88,
            "description": "Simple way to type-check that this is a TreeView instance.",
            "itemtype": "property",
            "name": "_isYUITreeView",
            "type": "Boolean",
            "default": "true",
            "access": "protected",
            "tagname": "",
            "class": "TreeView",
            "module": "gallery-sm-treeview"
        },
        {
            "file": "src/sm-treeview/js/treeview.js",
            "line": 97,
            "description": "Cached value of the `lazyRender` attribute.",
            "itemtype": "property",
            "name": "_lazyRender",
            "type": "Boolean",
            "access": "protected",
            "tagname": "",
            "class": "TreeView",
            "module": "gallery-sm-treeview"
        },
        {
            "file": "src/sm-treeview/js/treeview.js",
            "line": 129,
            "description": "Returns the HTML node (as a `Y.Node` instance) associated with the specified\n`Tree.Node` instance, if any.",
            "itemtype": "method",
            "name": "getHTMLNode",
            "params": [
                {
                    "name": "treeNode",
                    "description": "Tree node.",
                    "type": "Tree.Node"
                }
            ],
            "return": {
                "description": "`Y.Node` instance associated with the given tree node, or\n    `undefined` if one was not found.",
                "type": "Node"
            },
            "class": "TreeView",
            "module": "gallery-sm-treeview"
        },
        {
            "file": "src/sm-treeview/js/treeview.js",
            "line": 146,
            "description": "Renders this TreeView into its container.\n\nIf the container hasn't already been added to the current document, it will\nbe appended to the `<body>` element.",
            "itemtype": "method",
            "name": "render",
            "chainable": 1,
            "class": "TreeView",
            "module": "gallery-sm-treeview"
        },
        {
            "file": "src/sm-treeview/js/treeview.js",
            "line": 175,
            "description": "Renders the children of the specified tree node.\n\nIf a container is specified, it will be assumed to be an existing rendered\ntree node, and the children will be rendered (or re-rendered) inside it.",
            "itemtype": "method",
            "name": "renderChildren",
            "params": [
                {
                    "name": "treeNode",
                    "description": "Tree node whose children should be rendered.",
                    "type": "Tree.Node"
                },
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "container",
                            "description": "`Y.Node` instance of a container into\n        which the children should be rendered. If the container already\n        contains rendered children, they will be re-rendered in place.",
                            "type": "Node",
                            "optional": true
                        },
                        {
                            "name": "force",
                            "description": "If `true`, children will be\n        re-rendered from scratch even if they've already been rendered.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "`Y.Node` instance containing the rendered children.",
                "type": "Node"
            },
            "class": "TreeView",
            "module": "gallery-sm-treeview"
        },
        {
            "file": "src/sm-treeview/js/treeview.js",
            "line": 239,
            "description": "Renders the specified tree node and its children (if any).\n\nIf a container is specified, the rendered node will be appended to it.",
            "itemtype": "method",
            "name": "renderNode",
            "params": [
                {
                    "name": "treeNode",
                    "description": "Tree node to render.",
                    "type": "Tree.Node"
                },
                {
                    "name": "options",
                    "description": "Options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "container",
                            "description": "`Y.Node` instance of a container to\n        which the rendered tree node should be appended.",
                            "type": "Node",
                            "optional": true
                        },
                        {
                            "name": "force",
                            "description": "If `true`, this node (and its\n        children if `renderChildren` is `true`) will be re-rendered from\n        scratch, even if it's already been rendered.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "renderChildren",
                            "description": "Whether or not to render\n        this node's children.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "`Y.Node` instance of the rendered tree node.",
                "type": "Node"
            },
            "class": "TreeView",
            "module": "gallery-sm-treeview"
        },
        {
            "file": "src/sm-treeview/js/treeview.js",
            "line": 417,
            "description": "Setter for the `lazyRender` attribute.\n\nJust caches the value in a property for faster lookups.",
            "itemtype": "method",
            "name": "_setLazyRender",
            "return": {
                "description": "Value.",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "class": "TreeView",
            "module": "gallery-sm-treeview"
        },
        {
            "file": "src/sm-treeview/js/treeview.js",
            "line": 679,
            "description": "When `true`, a node's children won't be rendered until the first time\nthat node is opened.\n\nThis can significantly speed up the time it takes to render a large\ntree, but might not make sense if you're using CSS that doesn't hide the\ncontents of closed nodes.",
            "itemtype": "attribute",
            "name": "lazyRender",
            "type": "Boolean",
            "default": "true",
            "class": "TreeView",
            "module": "gallery-sm-treeview"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/sm-editor/js/extensions/editor-dom.js:214"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/sm-editor/js/extensions/editor-dom.js:232"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/sm-editor/js/extensions/editor-link.js:106"
        },
        {
            "message": "Missing item type\nCopies styles from a node to another node",
            "line": " src/sm-editor/js/extensions/editor-dom.js:20"
        },
        {
            "message": "Missing item type\nFinds the nearest ancestor element node.",
            "line": " src/sm-editor/js/extensions/editor-dom.js:57"
        },
        {
            "message": "Missing item type\nReplace spaces in text with a replacement string.\n\nPrimarily to workaround a webkit issue where it won't put the caret after\ntrailing whitespace at the end of a node",
            "line": " src/sm-editor/js/extensions/editor-dom.js:214"
        },
        {
            "message": "Missing item type\nHandles `keypress` events on the editor",
            "line": " src/sm-editor/js/extensions/editor-queue.js:163"
        },
        {
            "message": "Missing item type\nReformats html to the proper style\n\n<span>blah blah</span>",
            "line": " src/sm-editor/js/extensions/editor-style.js:222"
        },
        {
            "message": "Missing item type\nFunction for formatting editor html\n\nOne day allow custom formatting. Today is not that day.",
            "line": " src/sm-editor/js/extensions/editor-style.js:530"
        }
    ]
}